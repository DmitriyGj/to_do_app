{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action } from 'mobx';\nimport uuid from 'react-uuid';\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [{\n      id: uuid(),\n      title: 'asd',\n      done: false\n    }];\n    this.taskFilter = TaskFilter.All;\n\n    this.RemoveTask = taskId => {\n      console.log(this);\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    };\n\n    makeObservable(this, {\n      taskFilter: observable,\n      tasks: observable,\n      AddTask: action,\n      RemoveTask: action,\n      GetTasks: computed\n    });\n  }\n\n  get GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.tasks = [...this.tasks, task];\n  }\n\n  ToogleStatusTask(taskId) {\n    this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","uuid","TaskStore","constructor","tasks","id","title","done","taskFilter","All","RemoveTask","taskId","console","log","filter","task","AddTask","GetTasks","func","ToogleStatusTask","map","initTask"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,QAA+E,MAA/E;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,CAAC;AAACC,MAAAA,EAAE,EAACJ,IAAI,EAAR;AAAWK,MAAAA,KAAK,EAAC,KAAjB;AAAuBC,MAAAA,IAAI,EAAC;AAA5B,KAAD,CAGK;AAAA,SAFbC,UAEa,GAFAb,UAAU,CAACc,GAEX;;AAAA,SAgBbC,UAhBa,GAgBDC,MAAD,IAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKT,KAAL,GAAa,KAAKA,KAAL,CAAWU,MAAX,CAAkBC,IAAI,IAAEA,IAAI,CAACV,EAAL,KAAYM,MAApC,CAAb;AACH,KAnBY;;AACTd,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBW,MAAAA,UAAU,EAACV,UADK;AAEhBM,MAAAA,KAAK,EAACN,UAFU;AAGhBkB,MAAAA,OAAO,EAAChB,MAHQ;AAIhBU,MAAAA,UAAU,EAACV,MAJK;AAKhBiB,MAAAA,QAAQ,EAAClB;AALO,KAAN,CAAd;AAOH;;AAEW,MAARkB,QAAQ,GAAE;AAAC,WAAO,KAAKb,KAAL,CAAWU,MAAX,CAAkB,KAAKN,UAAL,CAAgBU,IAAlC,CAAP;AAAgD;;AAE/DF,EAAAA,OAAO,CAACD,IAAD,EAAM;AACT,SAAKX,KAAL,GAAY,CAAC,GAAG,KAAKA,KAAT,EAAeW,IAAf,CAAZ;AACH;;AAODI,EAAAA,gBAAgB,CAACR,MAAD,EAAQ;AACpB,SAAKP,KAAL,GAAY,KAAKA,KAAL,CAAWgB,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAAChB,EAAT,KAAgBM,MAAhB,GAAyB,EAAC,GAAGU,QAAJ;AAAad,MAAAA,IAAI,EAAC,CAACc,QAAQ,CAACd;AAA5B,KAAzB,GAA2Dc,QAAtF,CAAZ;AACH;;AA3BU;;AA8Bf,eAAgB,IAAInB,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action } from 'mobx';\r\nimport uuid from 'react-uuid';\r\n\r\nclass TaskStore{\r\n    tasks = [{id:uuid(),title:'asd',done:false}]\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            taskFilter:observable,\r\n            tasks:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            GetTasks:computed\r\n        });\r\n    }\r\n\r\n    get GetTasks(){return this.tasks.filter(this.taskFilter.func);}\r\n\r\n    AddTask(task){\r\n        this.tasks= [...this.tasks,task];\r\n    }\r\n\r\n    RemoveTask=(taskId)=>{\r\n        console.log(this);\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}