{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskManager\\\\TaskManager.tsx\";\nimport React, { useState, useCallback } from 'react';\nimport { TaskList } from '../TaskList/TaskList';\nimport { ModalWindow } from '../ModalWindow/ModalWindow';\nimport { TaskController } from '../../components/TaskContoller/TaskController';\nimport { CustomSelect } from '../../components/CustomSelect/CustomSelect';\nimport { TaskFilterOptions } from '../../constants/FilterConstants';\nimport { useDispatch, useSelector, Provider } from 'react-redux';\nimport { changeFilter, getFilter } from '../../reducers/FilterReducer';\nimport { TaskManagerStore } from '../../store/TaskManagerStore';\nexport const TaskManager = function TaskManager() {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const changeFilterHandler = useCallback(value => dispatch(changeFilter(value)), [dispatch]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: TaskManagerStore,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskManager\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskManger-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    title: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\",\n    parentValue: filter.name,\n    changeValueParentHandler: changeFilterHandler,\n    options: TaskFilterOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsOpenModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\")), /*#__PURE__*/React.createElement(TaskList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ModalWindow, {\n    visible: isOpenModal,\n    title: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n    content: /*#__PURE__*/React.createElement(TaskController, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 30\n      }\n    }),\n    footer: /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setIsOpenModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"),\n    onClose: () => setIsOpenModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskManager/TaskManager.tsx"],"names":["React","useState","useCallback","TaskList","ModalWindow","TaskController","CustomSelect","TaskFilterOptions","useDispatch","useSelector","Provider","changeFilter","getFilter","TaskManagerStore","TaskManager","isOpenModal","setIsOpenModal","dispatch","filter","changeFilterHandler","value","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,WAAzB,QAA4C,OAA5C;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAASC,cAAT,QAA+B,+CAA/B;AACA,SAASC,YAAT,QAA6B,4CAA7B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAkCC,QAAlC,QAAkD,aAAlD;AACA,SAASC,YAAT,EAAsBC,SAAtB,QAAuC,8BAAvC;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,MAAMC,WAAmC,GAAG,SAASA,WAAT,GAAsB;AACrE,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6Bf,QAAQ,CAAC,KAAD,CAA3C;AACA,QAAMgB,QAAQ,GAAET,WAAW,EAA3B;AACA,QAAMU,MAAM,GAAGT,WAAW,CAACG,SAAD,CAA1B;AACA,QAAMO,mBAAmB,GAAGjB,WAAW,CAAEkB,KAAD,IAAgBH,QAAQ,CAACN,YAAY,CAACS,KAAD,CAAb,CAAzB,EACX,CAACH,QAAD,CADW,CAAvC;AAEA,sBACI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,kDAApB;AACY,IAAA,WAAW,EAAEK,MAAM,CAACG,IADhC;AAEY,IAAA,wBAAwB,EAAEF,mBAFtC;AAGY,IAAA,OAAO,EAAEZ,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAQ,IAAA,OAAO,EAAE,MAAIS,cAAc,CAAC,IAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FALJ,CADJ,eAQI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,WAAtB;AACI,IAAA,KAAK,EAAC,mGADV;AAEI,IAAA,OAAO,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFb;AAGI,IAAA,MAAM,eAAE;AAAQ,MAAA,OAAO,EAAE,MAAIC,cAAc,CAAC,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAHZ;AAII,IAAA,OAAO,EAAE,MAAIA,cAAc,CAAC,KAAD,CAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CADJ;AAmBH,CAzBM","sourcesContent":["import React, { useState,useCallback } from 'react';\r\nimport {TaskList} from '../TaskList/TaskList';\r\nimport {ModalWindow} from '../ModalWindow/ModalWindow';\r\nimport { TaskController } from '../../components/TaskContoller/TaskController';\r\nimport { CustomSelect } from '../../components/CustomSelect/CustomSelect';\r\nimport { TaskFilterOptions } from '../../constants/FilterConstants';\r\nimport { useDispatch, useSelector,Provider } from 'react-redux';\r\nimport { changeFilter,getFilter } from '../../reducers/FilterReducer';\r\nimport { TaskManagerStore } from '../../store/TaskManagerStore';\r\n\r\nexport const TaskManager:React.FunctionComponent = function TaskManager(){\r\n    const [isOpenModal,setIsOpenModal]=useState(false);\r\n    const dispatch =useDispatch();\r\n    const filter = useSelector(getFilter);\r\n    const changeFilterHandler = useCallback((value:string)=>dispatch(changeFilter(value)),\r\n                                [dispatch]);\r\n    return(\r\n        <Provider store={TaskManagerStore}>\r\n            <div className='TaskManager'>\r\n                <div className='TaskManger-header'>\r\n                    <CustomSelect title='Показать'\r\n                                parentValue={filter.name}\r\n                                changeValueParentHandler={changeFilterHandler}\r\n                                options={TaskFilterOptions}/>\r\n                    <button onClick={()=>setIsOpenModal(true)}>Добавить задачу</button>\r\n                </div>\r\n                <TaskList></TaskList>\r\n                <ModalWindow visible={isOpenModal}\r\n                    title='Добавление задачи'\r\n                    content={<TaskController/>}\r\n                    footer={<button onClick={()=>setIsOpenModal(false)}>Закрыть</button>}\r\n                    onClose={()=>setIsOpenModal(false)}/>\r\n            </div>\r\n        </Provider>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}