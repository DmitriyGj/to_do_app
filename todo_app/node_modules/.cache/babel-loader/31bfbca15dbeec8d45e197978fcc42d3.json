{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action, reaction } from 'mobx';\nimport uuid from 'react-uuid';\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [{\n      id: uuid(),\n      title: 'asd',\n      done: false\n    }];\n    this.taskFilter = TaskFilter.All;\n\n    this.AddTask = task => {\n      this.tasks = [...this.tasks, task];\n    };\n\n    this.RemoveTask = taskId => {\n      console.log(this);\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    };\n\n    this.ToogleStatusTask = taskId => {\n      this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    };\n\n    makeObservable(this, {\n      taskFilter: observable,\n      tasks: observable,\n      AddTask: action,\n      RemoveTask: action,\n      GetTasks: computed\n    });\n    reaction(() => this.tasks, _ => console.log(this.tasks));\n  }\n\n  get GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","reaction","uuid","TaskStore","constructor","tasks","id","title","done","taskFilter","All","AddTask","task","RemoveTask","taskId","console","log","filter","ToogleStatusTask","map","initTask","GetTasks","_","func"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,EAAyEC,QAAzE,QAAyF,MAAzF;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,CAAC;AAACC,MAAAA,EAAE,EAACJ,IAAI,EAAR;AAAWK,MAAAA,KAAK,EAAC,KAAjB;AAAuBC,MAAAA,IAAI,EAAC;AAA5B,KAAD,CAGK;AAAA,SAFbC,UAEa,GAFAd,UAAU,CAACe,GAEX;;AAAA,SAabC,OAba,GAaJC,IAAD,IAAQ;AACZ,WAAKP,KAAL,GAAY,CAAC,GAAG,KAAKA,KAAT,EAAeO,IAAf,CAAZ;AACH,KAfY;;AAAA,SAiBbC,UAjBa,GAiBDC,MAAD,IAAU;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKX,KAAL,GAAa,KAAKA,KAAL,CAAWY,MAAX,CAAkBL,IAAI,IAAEA,IAAI,CAACN,EAAL,KAAYQ,MAApC,CAAb;AACH,KApBY;;AAAA,SAsBbI,gBAtBa,GAsBKJ,MAAD,IAAU;AACvB,WAAKT,KAAL,GAAY,KAAKA,KAAL,CAAWc,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACd,EAAT,KAAgBQ,MAAhB,GAAyB,EAAC,GAAGM,QAAJ;AAAaZ,QAAAA,IAAI,EAAC,CAACY,QAAQ,CAACZ;AAA5B,OAAzB,GAA2DY,QAAtF,CAAZ;AACH,KAxBY;;AACTvB,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBY,MAAAA,UAAU,EAACX,UADK;AAEhBO,MAAAA,KAAK,EAACP,UAFU;AAGhBa,MAAAA,OAAO,EAACX,MAHQ;AAIhBa,MAAAA,UAAU,EAACb,MAJK;AAKhBqB,MAAAA,QAAQ,EAACtB;AALO,KAAN,CAAd;AAOAE,IAAAA,QAAQ,CAAC,MAAI,KAAKI,KAAV,EAAgBiB,CAAC,IAAEP,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB,CAAnB,CAAR;AACH;;AAEW,MAARgB,QAAQ,GAAE;AAAC,WAAO,KAAKhB,KAAL,CAAWY,MAAX,CAAkB,KAAKR,UAAL,CAAgBc,IAAlC,CAAP;AAAgD;;AAfpD;;AA+Bf,eAAgB,IAAIpB,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action, reaction } from 'mobx';\r\nimport uuid from 'react-uuid';\r\n\r\nclass TaskStore{\r\n    tasks = [{id:uuid(),title:'asd',done:false}]\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            taskFilter:observable,\r\n            tasks:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            GetTasks:computed\r\n        });\r\n        reaction(()=>this.tasks,_=>console.log(this.tasks));\r\n    }\r\n\r\n    get GetTasks(){return this.tasks.filter(this.taskFilter.func);}\r\n\r\n    AddTask=(task)=>{\r\n        this.tasks= [...this.tasks,task];\r\n    }\r\n\r\n    RemoveTask=(taskId)=>{\r\n        console.log(this);\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask=(taskId)=>{\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}