{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskFilterSelector\\\\TaskFilterSelector.jsx\";\nimport { Component } from \"react\";\nimport uuid from \"react-uuid\";\nimport { ThemeContext } from \"../../../contexts/ThemeContext\";\nimport './TaskFilterSelector.css';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskFilterSelector extends Component {\n  render() {\n    const options = [{\n      value: task => task,\n      label: 'Все'\n    }, {\n      value: task => task.done === true,\n      label: 'Выполненные'\n    }, {\n      value: task => task.done === false,\n      label: 'Текущие'\n    }];\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: value + 'FilterSelector',\n          value: this.props.parentFilterValue,\n          onChange: this.props.parentChangeFilterHandler,\n          children: options.map(filter => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: filter.value.toString(),\n            label: filter.label\n          }, uuid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 44\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nTaskFilterSelector.propTypes = {\n  parentFilterValue: PropTypes.string,\n  parentChangeFilterHandler: PropTypes.func\n};\nexport { TaskFilterSelector };","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskFilterSelector/TaskFilterSelector.jsx"],"names":["Component","uuid","ThemeContext","PropTypes","TaskFilterSelector","render","options","value","task","label","done","props","parentFilterValue","parentChangeFilterHandler","map","filter","toString","propTypes","string","func"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA0C;AAEtCK,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,CAAC;AAACC,MAAAA,KAAK,EAAEC,IAAD,IAAQA,IAAf;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAAD,EACC;AAACF,MAAAA,KAAK,EAAEC,IAAD,IAASA,IAAI,CAACE,IAAL,KAAY,IAA5B;AAAoCD,MAAAA,KAAK,EAAC;AAA1C,KADD,EAEC;AAACF,MAAAA,KAAK,EAAEC,IAAD,IAASA,IAAI,CAACE,IAAL,KAAY,KAA5B;AAAmCD,MAAAA,KAAK,EAAC;AAAzC,KAFD,CAAhB;AAIA,wBACI,QAAC,YAAD,CAAc,QAAd;AAAA,gBACIF,KAAK,iBAAG;AAAA,oFACR;AAAQ,UAAA,SAAS,EAAEA,KAAK,GAAC,gBAAzB;AACQ,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,iBAD1B;AAEQ,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,yBAF7B;AAAA,oBAGKP,OAAO,CAACQ,GAAR,CAAYC,MAAM,iBAAI;AAAuB,YAAA,KAAK,EAAEA,MAAM,CAACR,KAAP,CAAaS,QAAb,EAA9B;AAAuD,YAAA,KAAK,EAAED,MAAM,CAACN;AAArE,aAAcR,IAAI,EAAlB;AAAA;AAAA;AAAA;AAAA,kBAAtB;AAHL;AAAA;AAAA;AAAA;AAAA,gBADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AApBqC;;AAuB1CG,kBAAkB,CAACa,SAAnB,GAA6B;AACzBL,EAAAA,iBAAiB,EAAET,SAAS,CAACe,MADJ;AAEzBL,EAAAA,yBAAyB,EAAEV,SAAS,CAACgB;AAFZ,CAA7B;AAKA,SAAQf,kBAAR","sourcesContent":["import {Component} from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport { ThemeContext } from \"../../../contexts/ThemeContext\";\r\nimport './TaskFilterSelector.css'\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TaskFilterSelector extends Component{\r\n\r\n    render() {\r\n        const options = [{value:(task)=>task, label: 'Все'},\r\n                         {value:(task)=>(task.done===true),  label:'Выполненные'},\r\n                         {value:(task)=>(task.done===false),label:'Текущие'}];\r\n\r\n        return (\r\n            <ThemeContext.Consumer>{\r\n                value=> <label>Показать\r\n                <select className={value+'FilterSelector'}\r\n                        value={this.props.parentFilterValue}\r\n                        onChange={this.props.parentChangeFilterHandler}>\r\n                    {options.map(filter => <option key ={uuid()}  value={filter.value.toString()} label={filter.label}></option>)}\r\n                </select>\r\n            </label>}\r\n\r\n            </ThemeContext.Consumer>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nTaskFilterSelector.propTypes={\r\n    parentFilterValue: PropTypes.string,\r\n    parentChangeFilterHandler: PropTypes.func\r\n};\r\n\r\nexport {TaskFilterSelector};"]},"metadata":{},"sourceType":"module"}