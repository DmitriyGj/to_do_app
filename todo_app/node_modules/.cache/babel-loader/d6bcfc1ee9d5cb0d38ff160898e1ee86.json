{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const taskSlice = createSlice({\n  name: 'taskReducer',\n  initialState: {\n    tasks: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      if (state.tasks.some(initTask => initTask.title === action.payload.title)) {\n        alert('Такое задание уже существует');\n      } else {\n        state.tasks.push(action.payload);\n      }\n    },\n    removeTask: (state, action) => {\n      const taskId = action.payload;\n      state.tasks = state.tasks.filter(initTask => initTask.id !== taskId);\n    },\n    changeDoneState: (state, action) => {\n      const taskId = action.payload;\n      state.tasks = state.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    }\n  }\n});\nexport const {\n  addTask,\n  removeTask,\n  changeDoneState\n} = taskSlice.actions;\nexport default taskerSlice.reducer;","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/redux/tasker.js"],"names":["createSlice","taskSlice","name","initialState","tasks","reducers","addTask","state","action","some","initTask","title","payload","alert","push","removeTask","taskId","filter","id","changeDoneState","map","done","actions","taskerSlice","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;AACjCE,EAAAA,IAAI,EAAC,aAD4B;AAEjCC,EAAAA,YAAY,EAAC;AACTC,IAAAA,KAAK,EAAC;AADG,GAFoB;AAKjCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpB,UAAGD,KAAK,CAACH,KAAN,CAAYK,IAAZ,CAAiBC,QAAQ,IAAGA,QAAQ,CAACC,KAAT,KAAmBH,MAAM,CAACI,OAAP,CAAeD,KAA9D,CAAH,EAAwE;AACpEE,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAFD,MAGI;AACAN,QAAAA,KAAK,CAACH,KAAN,CAAYU,IAAZ,CAAiBN,MAAM,CAACI,OAAxB;AACH;AACJ,KARI;AASLG,IAAAA,UAAU,EAAC,CAACR,KAAD,EAAOC,MAAP,KAAgB;AACvB,YAAMQ,MAAM,GAAGR,MAAM,CAACI,OAAtB;AACAL,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYa,MAAZ,CAAmBP,QAAQ,IAAGA,QAAQ,CAACQ,EAAT,KAAgBF,MAA9C,CAAd;AACH,KAZI;AAaLG,IAAAA,eAAe,EAAC,CAACZ,KAAD,EAAOC,MAAP,KAAgB;AAC5B,YAAMQ,MAAM,GAAGR,MAAM,CAACI,OAAtB;AACAL,MAAAA,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAAN,CAAYgB,GAAZ,CAAgBV,QAAQ,IAAIA,QAAQ,CAACQ,EAAT,KAAgBF,MAAhB,GAAyB,EAAC,GAAGN,QAAJ;AAAaW,QAAAA,IAAI,EAAC,CAACX,QAAQ,CAACW;AAA5B,OAAzB,GAA2DX,QAAvF,CAAd;AACH;AAhBI;AALwB,CAAD,CAA7B;AAyBP,OAAO,MAAM;AAACJ,EAAAA,OAAD;AAAUS,EAAAA,UAAV;AAAsBI,EAAAA;AAAtB,IAAyClB,SAAS,CAACqB,OAAzD;AACP,eAAeC,WAAW,CAACC,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nexport const taskSlice = createSlice({\r\n    name:'taskReducer',\r\n    initialState:{\r\n        tasks:[]\r\n    },\r\n    reducers:{\r\n        addTask:(state,action)=>{\r\n            if(state.tasks.some(initTask=> initTask.title === action.payload.title)){\r\n                alert('Такое задание уже существует');\r\n            }\r\n            else{\r\n                state.tasks.push(action.payload);\r\n            }\r\n        },\r\n        removeTask:(state,action)=>{\r\n            const taskId = action.payload;\r\n            state.tasks = state.tasks.filter(initTask=> initTask.id !== taskId);\r\n        },\r\n        changeDoneState:(state,action)=>{\r\n            const taskId = action.payload;\r\n            state.tasks = state.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addTask, removeTask, changeDoneState} = taskSlice.actions;\r\nexport default taskerSlice.reducer;"]},"metadata":{},"sourceType":"module"}