{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\Task\\\\Task.tsx\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useCallback, useState } from 'react';\nimport { removeTask, changeDoneState } from '../../reducers/TaskReduser';\nimport { TaskPriorityViews } from '../../constants/TaskConstants';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { Modal } from '../ModalWindow/ModalWindow';\nimport { TaskController } from '../TaskContoller/TaskController';\nimport './Task.css';\nexport const Task = function Task(props) {\n  const {\n    id,\n    title,\n    done,\n    deadLine,\n    priority\n  } = props;\n  const dispatch = useDispatch();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const removeTaskHandler = useCallback(id => dispatch(removeTask(id)), [dispatch]);\n  const changeDoneStateHandler = useCallback(id => dispatch(changeDoneState(id)), [dispatch]);\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, value => /*#__PURE__*/React.createElement(\"div\", {\n    className: `Task task-theme-${value}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"TaskPriority\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, TaskPriorityViews[priority]), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, title)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u0435\\u0434\\u043B\\u0430\\u0439\\u043D:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, `${deadLine.getDate()}-${deadLine.getMonth()}-${deadLine.getFullYear()}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskControls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => changeDoneStateHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, done ? '‚úîÔ∏è' : '‚ùå'), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsOpenModal(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDD8A\\uFE0F\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeTaskHandler(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"\\uD83D\\uDDD1\\uFE0F\")), /*#__PURE__*/React.createElement(Modal, {\n    visible: isOpenModal,\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u0447\\u0438\",\n    content: /*#__PURE__*/React.createElement(TaskController, {\n      task: props,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 30\n      }\n    }),\n    footer: /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setIsOpenModal(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"),\n    onClose: () => setIsOpenModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })));\n};","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/Task/Task.tsx"],"names":["React","useDispatch","useCallback","useState","removeTask","changeDoneState","TaskPriorityViews","ThemeContext","Modal","TaskController","Task","props","id","title","done","deadLine","priority","dispatch","isOpenModal","setIsOpenModal","removeTaskHandler","changeDoneStateHandler","value","getDate","getMonth","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TTask } from '../../types/types';\r\nimport {useDispatch} from 'react-redux'\r\nimport { useCallback, useState } from 'react';\r\nimport { removeTask,changeDoneState } from '../../reducers/TaskReduser';\r\nimport { TaskPriorityViews } from '../../constants/TaskConstants';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { Modal } from '../ModalWindow/ModalWindow';\r\nimport { TaskController } from '../TaskContoller/TaskController';\r\nimport './Task.css';\r\n\r\nexport const Task: React.FunctionComponent<TTask>= function Task(props:TTask){\r\n\r\n    const {id,title,done,deadLine,priority} = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const [isOpenModal,setIsOpenModal]=useState(false);\r\n\r\n    const removeTaskHandler = useCallback(\r\n        (id:string)=>dispatch(removeTask(id)),\r\n        [dispatch]);\r\n\r\n    const changeDoneStateHandler = useCallback(\r\n        (id:string)=>dispatch(changeDoneState(id)),\r\n        [dispatch]);\r\n    return(\r\n        <ThemeContext.Consumer>{value=>\r\n            <div className={`Task task-theme-${value}`}>\r\n                <span className='TaskPriority'>\r\n                    {TaskPriorityViews[priority]}\r\n                </span>\r\n                <div className = 'TaskTitle'>\r\n                    <label>–ù–∞–∑–≤–∞–Ω–∏–µ:</label>\r\n                    <p>{title}</p>\r\n                </div>\r\n                <div className='TaskDate'>\r\n                    <label>–î–µ–¥–ª–∞–π–Ω:</label>\r\n                    <p>{`${deadLine.getDate()}-${deadLine.getMonth()}-${deadLine.getFullYear()}`}</p>\r\n                </div>\r\n                <div className='TaskControls'>\r\n                    <button onClick={()=>changeDoneStateHandler(id)}>{done? '‚úîÔ∏è':'‚ùå'}</button>\r\n                    <button onClick={()=>setIsOpenModal(true)}>üñäÔ∏è</button>\r\n                    <button onClick= {()=>removeTaskHandler(id)}>üóëÔ∏è</button>\r\n                </div>\r\n                <Modal visible={isOpenModal}\r\n                    title='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏'\r\n                    content={<TaskController task={props}/>}\r\n                    footer={<button onClick={()=>setIsOpenModal(false)}>–ó–∞–∫—Ä—ã—Ç—å</button>}\r\n                    onClose={()=>setIsOpenModal(false)}/>\r\n            </div>}\r\n        </ThemeContext.Consumer> \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}