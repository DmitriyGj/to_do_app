{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeObservable, observable, computed } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  constructor() {\n    taskFilter = TaskFilter.All;\n    makeObservable(this, {\n      tasks: observable\n    });\n    this.tasks = [];\n    this.GetTasks = this.GetTasks.bind(this);\n    this.AddTask = this.AddTask.bind(this);\n    this.RemoveTask = this.RemoveTask.bind(this);\n    this.ToggleStatusTask = this.ToggleStatusTask.bind(this);\n  }\n\n  GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.tasks.push(task);\n  }\n\n  RemoveTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n\n  ToogleStatusTask(taskId) {\n    this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n  changeFilter(filterName) {\n    this.taskFilter = TaskFilter.filterName;\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeObservable","observable","computed","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","constructor","taskFilter","All","tasks","GetTasks","bind","filter","func","task","push","taskId","id","ToogleStatusTask","map","initTask","done","changeFilter","filterName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,cAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,MAApD;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAGXC,EAAAA,WAAW,GAAE;AACTC,IAAAA,UAAU,GAAGV,UAAU,CAACW,GAAxB;AACAV,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBW,MAAAA,KAAK,EAAEV;AADS,KAAN,CAAd;AAGA,SAAKU,KAAL,GAAa,EAAb;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKT,OAAL,GAAe,KAAKA,OAAL,CAAaS,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKR,UAAL,GAAkB,KAAKA,UAAL,CAAgBQ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKP,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBO,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKD,KAAL,CAAWG,MAAX,CAAkB,KAAKL,UAAL,CAAgBM,IAAlC,CAAP;AACH;;AAEDX,EAAAA,OAAO,CAACY,IAAD,EAAM;AACT,SAAKL,KAAL,CAAWM,IAAX,CAAgBD,IAAhB;AACH;;AAEDX,EAAAA,UAAU,CAACa,MAAD,EAAQ;AACd,SAAKP,KAAL,GAAa,KAAKA,KAAL,CAAWG,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAYD,MAApC,CAAb;AACH;;AAEDE,EAAAA,gBAAgB,CAACF,MAAD,EAAQ;AACpB,SAAKP,KAAL,GAAY,KAAKA,KAAL,CAAWU,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGI,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACH;;AAEDE,EAAAA,YAAY,CAACC,UAAD,EAAY;AACpB,SAAKhB,UAAL,GAAkBV,UAAU,CAAC0B,UAA7B;AACH;;AAjCU;;AAoCf,eAAgB,IAAIlB,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeObservable,observable, computed } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n\r\n\r\n    constructor(){\r\n        taskFilter = TaskFilter.All;\r\n        makeObservable(this,{\r\n            tasks: observable,\r\n        });\r\n        this.tasks = [];\r\n        this.GetTasks = this.GetTasks.bind(this);\r\n        this.AddTask = this.AddTask.bind(this);\r\n        this.RemoveTask = this.RemoveTask.bind(this);\r\n        this.ToggleStatusTask = this.ToggleStatusTask.bind(this);\r\n    }\r\n\r\n    GetTasks(){\r\n        return this.tasks.filter(this.taskFilter.func);\r\n    }\r\n\r\n    AddTask(task){\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n\r\n    changeFilter(filterName){\r\n        this.taskFilter = TaskFilter.filterName\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}