{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action, reaction } from 'mobx';\nimport uuid from 'react-uuid';\n\nclass TaskStore {\n  constructor() {\n    this.todos = [{\n      id: uuid(),\n      title: 'asd',\n      done: false\n    }];\n    this.taskFilter = TaskFilter.All;\n\n    this.ToogleStatusTask = taskId => {\n      this.todos = this.todos.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    };\n\n    makeObservable(this, {\n      taskFilter: observable,\n      todos: observable,\n      AddTask: action,\n      RemoveTask: action,\n      GetTasks: computed\n    });\n    reaction(() => this.todos, _ => console.log(this.todos));\n  }\n\n  get GetTasks() {\n    return this.todos.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.todos = [...this.todos, task];\n  }\n\n  RemoveTask(taskId) {\n    console.log(this);\n    this.todos = this.todos.filter(task => task.id !== taskId);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","reaction","uuid","TaskStore","constructor","todos","id","title","done","taskFilter","All","ToogleStatusTask","taskId","map","initTask","AddTask","RemoveTask","GetTasks","_","console","log","filter","func","task"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,EAAyEC,QAAzE,QAAyF,MAAzF;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,CAAC;AAACC,MAAAA,EAAE,EAACJ,IAAI,EAAR;AAAWK,MAAAA,KAAK,EAAC,KAAjB;AAAuBC,MAAAA,IAAI,EAAC;AAA5B,KAAD,CAGK;AAAA,SAFbC,UAEa,GAFAd,UAAU,CAACe,GAEX;;AAAA,SAsBbC,gBAtBa,GAsBKC,MAAD,IAAU;AACvB,WAAKP,KAAL,GAAY,KAAKA,KAAL,CAAWQ,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACR,EAAT,KAAgBM,MAAhB,GAAyB,EAAC,GAAGE,QAAJ;AAAaN,QAAAA,IAAI,EAAC,CAACM,QAAQ,CAACN;AAA5B,OAAzB,GAA2DM,QAAtF,CAAZ;AACH,KAxBY;;AACTjB,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBY,MAAAA,UAAU,EAACX,UADK;AAEhBO,MAAAA,KAAK,EAACP,UAFU;AAGhBiB,MAAAA,OAAO,EAACf,MAHQ;AAIhBgB,MAAAA,UAAU,EAAChB,MAJK;AAKhBiB,MAAAA,QAAQ,EAAClB;AALO,KAAN,CAAd;AAOAE,IAAAA,QAAQ,CAAC,MAAI,KAAKI,KAAV,EAAgBa,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB,CAAnB,CAAR;AACH;;AAEW,MAARY,QAAQ,GAAE;AAAC,WAAO,KAAKZ,KAAL,CAAWgB,MAAX,CAAkB,KAAKZ,UAAL,CAAgBa,IAAlC,CAAP;AAAgD;;AAE/DP,EAAAA,OAAO,CAACQ,IAAD,EAAM;AACT,SAAKlB,KAAL,GAAY,CAAC,GAAG,KAAKA,KAAT,EAAekB,IAAf,CAAZ;AACH;;AAEDP,EAAAA,UAAU,CAACJ,MAAD,EAAQ;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKf,KAAL,GAAa,KAAKA,KAAL,CAAWgB,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACjB,EAAL,KAAYM,MAApC,CAAb;AACH;;AAxBU;;AA+Bf,eAAgB,IAAIT,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action, reaction } from 'mobx';\r\nimport uuid from 'react-uuid';\r\n\r\nclass TaskStore{\r\n    todos = [{id:uuid(),title:'asd',done:false}]\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            taskFilter:observable,\r\n            todos:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            GetTasks:computed\r\n        });\r\n        reaction(()=>this.todos,_=>console.log(this.todos));\r\n    }\r\n\r\n    get GetTasks(){return this.todos.filter(this.taskFilter.func);}\r\n\r\n    AddTask(task){\r\n        this.todos= [...this.todos,task];\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        console.log(this);\r\n        this.todos = this.todos.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask=(taskId)=>{\r\n        this.todos= this.todos.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}