{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.taskFilter = TaskFilter.All;\n\n    this.GetTasks = () => this.tasks.filter(this.taskFilter.func);\n\n    this.AddTask = task => {\n      this.tasks = [...this.tasks, task];\n    };\n\n    this.RemoveTask = taskId => {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    };\n\n    makeAutoObservable(this);\n  }\n\n  ToogleStatusTask(taskId) {\n    this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","constructor","tasks","taskFilter","All","GetTasks","filter","func","task","taskId","id","ToogleStatusTask","map","initTask","done"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,QAA+E,MAA/E;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,EAGK;AAAA,SAFbC,UAEa,GAFAb,UAAU,CAACc,GAEX;;AAAA,SAIbC,QAJa,GAIJ,MAAK,KAAKH,KAAL,CAAWI,MAAX,CAAkB,KAAKH,UAAL,CAAgBI,IAAlC,CAJD;;AAAA,SAMbV,OANa,GAMJW,IAAD,IAAQ;AACZ,WAAKN,KAAL,GAAY,CAAC,GAAG,KAAKA,KAAT,EAAeM,IAAf,CAAZ;AACH,KARY;;AAAA,SAUbV,UAVa,GAUDW,MAAD,IAAU;AACjB,WAAKP,KAAL,GAAa,KAAKA,KAAL,CAAWI,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAYD,MAApC,CAAb;AACH,KAZY;;AACTlB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AAYDoB,EAAAA,gBAAgB,CAACF,MAAD,EAAQ;AACpB,SAAKP,KAAL,GAAY,KAAKA,KAAL,CAAWU,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGI,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACH;;AApBU;;AAuBf,eAAe,IAAIb,SAAJ,EAAf","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n    tasks = []\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    GetTasks=()=> this.tasks.filter(this.taskFilter.func);\r\n\r\n    AddTask=(task)=>{\r\n        this.tasks= [...this.tasks,task];\r\n    }\r\n\r\n    RemoveTask=(taskId)=>{\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default new TaskStore();"]},"metadata":{},"sourceType":"module"}