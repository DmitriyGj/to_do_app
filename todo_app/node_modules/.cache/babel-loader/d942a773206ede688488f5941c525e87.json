{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskHolder.jsx\";\nimport React from \"react\";\nimport { useState, useContext, useCallback } from 'react';\nimport './TaskHolder.css';\nimport { TaskController } from './TaskController/TaskController';\nimport { Task } from '../Task/Task';\nimport { addLodaing } from '../../HOCs/LoaderHOC';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { Selector } from '../Selector/Selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTask, removeTask, changeDoneState, applyFilter, setFilter } from '../../redux/tasker';\nconst TaskWithLoading = addLodaing(Task);\nexport function TaskHolder() {\n  const theme = useContext(ThemeContext);\n  const {\n    filtredTasks,\n    filter\n  } = useSelector(state => state.tasks);\n  const dispatch = useDispatch();\n\n  const changeFilterHandler = e => {\n    dispatch(setFilter(e.target.value));\n    dispatch(applyFilter());\n  };\n\n  const changeDoneTaskHandler = useCallback(taskId => dispatch(changeDoneState(taskId)), [dispatch]);\n  const removeTaskHandler = useCallback(taskId => dispatch(removeTask(taskId)), [dispatch]);\n  const addTaskHandler = useCallback(task => dispatch(addTask(task)), [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `TaskHolder ${theme}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MainInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438\"), /*#__PURE__*/React.createElement(TaskController, {\n    addTaskParentHandler: addTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Selector, {\n    title: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\",\n    options: TaskFilterOptions,\n    changeValueParentHandler: changeFilterHandler,\n    parentValue: taskFilterName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, [...filtredTasks].map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(TaskWithLoading, Object.assign({}, task, {\n    removeTaskParentHandler: removeTaskHandler,\n    changeDoneTaskParentHandler: changeDoneTaskHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }\n  }))))));\n}","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskHolder.jsx"],"names":["React","useState","useContext","useCallback","TaskController","Task","addLodaing","ThemeContext","Selector","useDispatch","useSelector","addTask","removeTask","changeDoneState","applyFilter","setFilter","TaskWithLoading","TaskHolder","theme","filtredTasks","filter","state","tasks","dispatch","changeFilterHandler","e","target","value","changeDoneTaskHandler","taskId","removeTaskHandler","addTaskHandler","task","TaskFilterOptions","taskFilterName","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAiBC,UAAjB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,OAAO,kBAAP;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAAQC,OAAR,EAAgBC,UAAhB,EAA2BC,eAA3B,EAA2CC,WAA3C,EAAuDC,SAAvD,QAAuE,oBAAvE;AAEA,MAAMC,eAAe,GAAGV,UAAU,CAACD,IAAD,CAAlC;AAEA,OAAO,SAASY,UAAT,GAAqB;AAExB,QAAMC,KAAK,GAAGhB,UAAU,CAACK,YAAD,CAAxB;AAEA,QAAM;AAACY,IAAAA,YAAD;AAAcC,IAAAA;AAAd,MAAwBV,WAAW,CAAEW,KAAD,IAASA,KAAK,CAACC,KAAhB,CAAzC;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,mBAAmB,GAAIC,CAAD,IAAM;AAC9BF,IAAAA,QAAQ,CAACR,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CAAR;AACAJ,IAAAA,QAAQ,CAACT,WAAW,EAAZ,CAAR;AACH,GAHD;;AAKA,QAAMc,qBAAqB,GAAGzB,WAAW,CAAC0B,MAAM,IAAEN,QAAQ,CAACV,eAAe,CAACgB,MAAD,CAAhB,CAAjB,EAA2C,CAACN,QAAD,CAA3C,CAAzC;AAEA,QAAMO,iBAAiB,GAAG3B,WAAW,CAAC0B,MAAM,IAAGN,QAAQ,CAACX,UAAU,CAACiB,MAAD,CAAX,CAAlB,EAAuC,CAACN,QAAD,CAAvC,CAArC;AAEA,QAAMQ,cAAc,GAAG5B,WAAW,CAAC6B,IAAI,IAAET,QAAQ,CAACZ,OAAO,CAACqB,IAAD,CAAR,CAAf,EAA+B,CAACT,QAAD,CAA/B,CAAlC;AAEA,sBAAQ;AAAK,IAAA,SAAS,EAAG,cAAaL,KAAM,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2HADJ,eAEQ,oBAAC,cAAD;AAAgB,IAAA,oBAAoB,EAAIa,cAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,eAGQ,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,kDAAhB;AACgB,IAAA,OAAO,EAAEE,iBADzB;AAEgB,IAAA,wBAAwB,EAAIT,mBAF5C;AAGgB,IAAA,WAAW,EAAGU,cAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC,GAAGf,YAAJ,EAAkBgB,GAAlB,CAAsBH,IAAI,iBAAE;AAAI,IAAA,GAAG,EAAIA,IAAI,CAACI,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACb,oBAAC,eAAD,oBAAqBJ,IAArB;AACA,IAAA,uBAAuB,EAAIF,iBAD3B;AAEA,IAAA,2BAA2B,EAAIF,qBAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADa,CAA5B,CADL,CATJ,CAAR;AAiBH","sourcesContent":["import React from \"react\";\r\nimport {useState,useContext, useCallback} from 'react'\r\nimport './TaskHolder.css'\r\nimport {TaskController} from './TaskController/TaskController';\r\nimport {Task} from '../Task/Task';\r\nimport { addLodaing } from '../../HOCs/LoaderHOC';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { Selector } from '../Selector/Selector';\r\nimport { useDispatch,useSelector } from 'react-redux';\r\nimport {addTask,removeTask,changeDoneState,applyFilter,setFilter} from '../../redux/tasker'\r\n\r\nconst TaskWithLoading = addLodaing(Task);\r\n\r\nexport function TaskHolder(){\r\n\r\n    const theme = useContext(ThemeContext);\r\n\r\n    const {filtredTasks,filter} = useSelector((state)=>state.tasks);\r\n    const dispatch = useDispatch();\r\n\r\n    const changeFilterHandler = (e) =>{\r\n        dispatch(setFilter(e.target.value));\r\n        dispatch(applyFilter());\r\n    } \r\n\r\n    const changeDoneTaskHandler = useCallback(taskId=>dispatch(changeDoneState(taskId)),[dispatch]);\r\n\r\n    const removeTaskHandler = useCallback(taskId =>dispatch(removeTask(taskId)),[dispatch]);\r\n    \r\n    const addTaskHandler = useCallback(task=>dispatch(addTask(task)),[dispatch]);\r\n\r\n    return (<div className={`TaskHolder ${theme}`}>\r\n                <div className='MainInfo'>\r\n                    <h2>Управление заданиями</h2>\r\n                        <TaskController addTaskParentHandler = {addTaskHandler}/>\r\n                        <Selector title='Показать' \r\n                                        options={TaskFilterOptions}\r\n                                        changeValueParentHandler = {changeFilterHandler}\r\n                                        parentValue ={taskFilterName} />\r\n                </div>\r\n                <ul>\r\n                    {[...filtredTasks].map(task=><li key = {task.id}>\r\n                                    <TaskWithLoading {...task} \r\n                                    removeTaskParentHandler = {removeTaskHandler}\r\n                                    changeDoneTaskParentHandler = {changeDoneTaskHandler}/> \r\n                                </li>)}\r\n                </ul>\r\n            </div> )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}