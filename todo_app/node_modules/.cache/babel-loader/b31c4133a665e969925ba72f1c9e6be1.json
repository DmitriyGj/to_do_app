{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport tasksReducer from './tasks';\nexport const store = configureStore({\n  reducer: {\n    tasks: tasksReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/redux/store.ts"],"names":["configureStore","tasksReducer","store","reducer","tasks","middleware","getDefaultMiddleware","serializableCheck"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAQC,YAAR,MAA2B,SAA3B;AAEA,OAAO,MAAMC,KAAK,GAAGF,cAAc,CAAC;AAChCG,EAAAA,OAAO,EAAC;AACJC,IAAAA,KAAK,EAAEH;AADH,GADwB;AAIhCI,EAAAA,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,CAAC;AAACC,IAAAA,iBAAiB,EAAC;AAAnB,GAAD;AAJ1B,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport  tasksReducer  from './tasks';\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        tasks: tasksReducer\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({serializableCheck:false})\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;"]},"metadata":{},"sourceType":"module"}