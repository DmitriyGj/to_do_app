{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeObservable, computed, action } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.taskFilter = TaskFilter.All;\n    makeObservable(this, {\n      tasks: observable,\n      GetTasks: action,\n      AddTask: action,\n      RemoveTask: action,\n      ToogleStatusTask: action\n    });\n  }\n\n  GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.tasks.push(task);\n  }\n\n  RemoveTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n\n  ToogleStatusTask(taskId) {\n    this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeObservable","computed","action","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","constructor","tasks","taskFilter","All","observable","GetTasks","ToogleStatusTask","filter","func","task","push","taskId","id","map","initTask","done"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAiD,MAAjD;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,EAGK;AAAA,SAFbC,UAEa,GAFAX,UAAU,CAACY,GAEX;AACTX,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBS,MAAAA,KAAK,EAAEG,UADS;AAEhBC,MAAAA,QAAQ,EAACX,MAFO;AAGhBE,MAAAA,OAAO,EAACF,MAHQ;AAIhBG,MAAAA,UAAU,EAACH,MAJK;AAKhBY,MAAAA,gBAAgB,EAACZ;AALD,KAAN,CAAd;AAOH;;AAEDW,EAAAA,QAAQ,GAAE;AAAC,WAAO,KAAKJ,KAAL,CAAWM,MAAX,CAAkB,KAAKL,UAAL,CAAgBM,IAAlC,CAAP;AAAgD;;AAE3DZ,EAAAA,OAAO,CAACa,IAAD,EAAM;AACT,SAAKR,KAAL,CAAWS,IAAX,CAAgBD,IAAhB;AACH;;AAEDZ,EAAAA,UAAU,CAACc,MAAD,EAAQ;AACd,SAAKV,KAAL,GAAa,KAAKA,KAAL,CAAWM,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAYD,MAApC,CAAb;AACH;;AAEDL,EAAAA,gBAAgB,CAACK,MAAD,EAAQ;AACpB,SAAKV,KAAL,GAAY,KAAKA,KAAL,CAAWY,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACF,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGG,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACH;;AA1BU;;AA6Bf,eAAe,IAAIf,SAAJ,EAAf","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeObservable, computed, action } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n    tasks = []\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            tasks: observable,\r\n            GetTasks:action,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            ToogleStatusTask:action,\r\n        });\r\n    }\r\n\r\n    GetTasks(){return this.tasks.filter(this.taskFilter.func);}\r\n\r\n    AddTask(task){\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default new TaskStore();"]},"metadata":{},"sourceType":"module"}