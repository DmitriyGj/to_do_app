{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskHolder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useCallback } from 'react';\nimport './TaskHolder.css';\nimport { TaskController } from './TaskController/TaskController';\nimport { Task } from '../Task/Task';\nimport { addLodaing } from '../../HOCs/LoaderHOC';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { Selector } from '../Selector/Selector';\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWithLoading = addLodaing(Task);\n_c = TaskWithLoading;\nexport const TaskHolder = _s(observer(_c2 = _s(_ref => {\n  _s();\n\n  let {\n    tasksStore\n  } = _ref;\n  const AddTask = useCallback(task => tasksStore.AddTask(task), [tasksStore]);\n  const RemoveTask = useCallback(taskId => tasksStore.RemoveTask(taskId), [tasksStore]);\n  const ToggleStatusTask = useCallback(taskId => tasksStore.ToggleStatusTask(taskId), [tasksStore]);\n  const changeFilter = useCallback(filterName => tasksStore.ChangeFilter(filterName));\n  const {\n    taskName\n  } = tasksStore;\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TaskHolder ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TaskController, {\n        addTaskParentHandler: AddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Selector, {\n        title: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\",\n        options: TaskFilterOptions,\n        changeValueParentHandler: changeFilter,\n        parentValue: taskFilterName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.filter(taskFilter).map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(TaskWithLoading, { ...task,\n          removeTaskParentHandler: RemoveTask,\n          changeDoneTaskParentHandler: ToggleStatusTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 61\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}, \"112nYdrloihC0WzcmmNjfVcj/PM=\")), \"112nYdrloihC0WzcmmNjfVcj/PM=\");\n_c3 = TaskHolder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TaskWithLoading\");\n$RefreshReg$(_c2, \"TaskHolder$observer\");\n$RefreshReg$(_c3, \"TaskHolder\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskHolder.jsx"],"names":["useState","useContext","useCallback","TaskController","Task","addLodaing","ThemeContext","Selector","TaskFilterOptions","TaskFilter","observer","TaskWithLoading","TaskHolder","tasksStore","AddTask","task","RemoveTask","taskId","ToggleStatusTask","changeFilter","filterName","ChangeFilter","taskName","theme","taskFilterName","tasks","filter","taskFilter","map","id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAiBC,UAAjB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,OAAO,kBAAP;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,eAAe,GAAGN,UAAU,CAACD,IAAD,CAAlC;KAAMO,e;AACN,OAAO,MAAMC,UAAU,MAAGF,QAAQ,UAAC,QAAgB;AAAA;;AAAA,MAAf;AAACG,IAAAA;AAAD,GAAe;AAE/C,QAAMC,OAAO,GAAEZ,WAAW,CAAEa,IAAD,IAAQF,UAAU,CAACC,OAAX,CAAmBC,IAAnB,CAAT,EAAkC,CAACF,UAAD,CAAlC,CAA1B;AACA,QAAMG,UAAU,GAAEd,WAAW,CAAEe,MAAD,IAAWJ,UAAU,CAACG,UAAX,CAAsBC,MAAtB,CAAZ,EAA0C,CAACJ,UAAD,CAA1C,CAA7B;AACA,QAAMK,gBAAgB,GAAGhB,WAAW,CAAEe,MAAD,IAAYJ,UAAU,CAACK,gBAAX,CAA4BD,MAA5B,CAAb,EAAkD,CAACJ,UAAD,CAAlD,CAApC;AACA,QAAMM,YAAY,GAAGjB,WAAW,CAAEkB,UAAD,IAAcP,UAAU,CAACQ,YAAX,CAAwBD,UAAxB,CAAf,CAAhC;AACA,QAAM;AAACE,IAAAA;AAAD,MAAaT,UAAnB;AACA,QAAMU,KAAK,GAAGtB,UAAU,CAACK,YAAD,CAAxB;AAEJ,sBAAQ;AAAK,IAAA,SAAS,EAAG,cAAaiB,KAAM,EAApC;AAAA,4BACY;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,cAAD;AAAgB,QAAA,oBAAoB,EAAET;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFR,eAGS,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,kDAAhB;AACe,QAAA,OAAO,EAAEN,iBADxB;AAEe,QAAA,wBAAwB,EAAIW,YAF3C;AAGe,QAAA,WAAW,EAAGK;AAH7B;AAAA;AAAA;AAAA;AAAA,cAHT;AAAA;AAAA;AAAA;AAAA;AAAA,YADZ,eASY;AAAA,gBACKC,KAAK,CAACC,MAAN,CAAaC,UAAb,EAAyBC,GAAzB,CAA6Bb,IAAI,iBAAE;AAAA,+BACpB,QAAC,eAAD,OAAqBA,IAArB;AACA,UAAA,uBAAuB,EAAIC,UAD3B;AAEA,UAAA,2BAA2B,EAAIE;AAF/B;AAAA;AAAA;AAAA;AAAA;AADoB,SAAWH,IAAI,CAACc,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAnC;AADL;AAAA;AAAA;AAAA;AAAA,YATZ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAkBC,CA3BiC,kCAAX,iCAAhB;MAAMjB,U","sourcesContent":["import {useState,useContext, useCallback} from 'react'\r\nimport './TaskHolder.css'\r\nimport {TaskController} from './TaskController/TaskController';\r\nimport {Task} from '../Task/Task';\r\nimport { addLodaing } from '../../HOCs/LoaderHOC';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { Selector } from '../Selector/Selector';\r\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst TaskWithLoading = addLodaing(Task);\r\nexport const TaskHolder = observer(({tasksStore})=>{\r\n\r\n    const AddTask =useCallback((task)=>tasksStore.AddTask(task),[tasksStore]);\r\n    const RemoveTask =useCallback((taskId) =>tasksStore.RemoveTask(taskId),[tasksStore]);\r\n    const ToggleStatusTask = useCallback((taskId) => tasksStore.ToggleStatusTask(taskId), [tasksStore])\r\n    const changeFilter = useCallback((filterName)=>tasksStore.ChangeFilter(filterName))\r\n    const {taskName} = tasksStore;\r\n    const theme = useContext(ThemeContext);\r\n\r\nreturn (<div className={`TaskHolder ${theme}`}>\r\n                    <div className='MainInfo'>\r\n                        <h2>Управление заданиями</h2>\r\n                            <TaskController addTaskParentHandler={AddTask}/>\r\n                            {<Selector title='Показать' \r\n                                            options={TaskFilterOptions}\r\n                                            changeValueParentHandler = {changeFilter}\r\n                                            parentValue ={taskFilterName} /> }\r\n                    </div>\r\n                    <ul>\r\n                        {tasks.filter(taskFilter).map(task=><li key = {task.id}>\r\n                                        <TaskWithLoading {...task} \r\n                                        removeTaskParentHandler = {RemoveTask}\r\n                                        changeDoneTaskParentHandler = {ToggleStatusTask}/> \r\n                                    </li>)}\r\n                    </ul>\r\n                </div>\r\n    );\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}