{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\Task\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { useContext } from \"react\";\nimport PropTypes from 'prop-types';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Task(props) {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const {\n    id,\n    title,\n    priority,\n    done,\n    changeDoneTaskParentHandler,\n    removeTaskParentHandler\n  } = this.props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Task ${theme + defineBackgroundColor()}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TaskHeader \",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: 'TaskBtn',\n        onClick: () => props.parentRemoveTaskHandler(props.id),\n        children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CompleteBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"complete\",\n          children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"complete\",\n          type: \"checkbox\",\n          checked: props.done,\n          onChange: () => props.parentChangeDoneTaskHandler(props.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Task, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c = Task;\nTask.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  priority: PropTypes.string,\n  done: PropTypes.bool,\n  parentRemoveTaskHandler: PropTypes.func.isRequired,\n  parentChangeDoneTaskHandler: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/Task/Task.jsx"],"names":["ThemeContext","useContext","PropTypes","Task","props","theme","id","title","priority","done","changeDoneTaskParentHandler","removeTaskParentHandler","defineBackgroundColor","parentRemoveTaskHandler","parentChangeDoneTaskHandler","propTypes","string","isRequired","bool","func"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACxB,QAAMC,KAAK,GAAGJ,UAAU,CAACD,YAAD,CAAxB;AACA,QAAM;AAACM,IAAAA,EAAD;AAAKC,IAAAA,KAAL;AAAYC,IAAAA,QAAZ;AAAuBC,IAAAA,IAAvB;AAA6BC,IAAAA,2BAA7B;AAA0DC,IAAAA;AAA1D,MAAqF,KAAKP,KAAhG;AAEA,sBAAQ;AAAK,IAAA,SAAS,EAAG,QAAOC,KAAK,GAAGO,qBAAqB,EAAG,EAAxD;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA,kBAAIR,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAE,SAAnB;AAA8B,QAAA,OAAO,EAAE,MAAIH,KAAK,CAACS,uBAAN,CAA8BT,KAAK,CAACE,EAApC,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eAKQ;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,OAAO,EAAEF,KAAK,CAACK,IAApD;AACI,UAAA,QAAQ,EAAE,MAAIL,KAAK,CAACU,2BAAN,CAAkCV,KAAK,CAACE,EAAxC;AADlB;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALR;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAcH;;GAlBeH,I;;KAAAA,I;AAoBhBA,IAAI,CAACY,SAAL,GAAiB;AACbT,EAAAA,EAAE,EAACJ,SAAS,CAACc,MADA;AAEbT,EAAAA,KAAK,EAAEL,SAAS,CAACc,MAAV,CAAiBC,UAFX;AAGbT,EAAAA,QAAQ,EAAEN,SAAS,CAACc,MAHP;AAIbP,EAAAA,IAAI,EAAEP,SAAS,CAACgB,IAJH;AAKbL,EAAAA,uBAAuB,EAAEX,SAAS,CAACiB,IAAV,CAAeF,UAL3B;AAMbH,EAAAA,2BAA2B,EAAEZ,SAAS,CAACiB,IAAV,CAAeF;AAN/B,CAAjB","sourcesContent":["import { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { useContext } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Task.css'\r\n\r\nexport function Task(props) {\r\n    const theme = useContext(ThemeContext);\r\n    const {id, title, priority , done, changeDoneTaskParentHandler, removeTaskParentHandler} = this.props; \r\n\r\n    return (<div className={`Task ${theme + defineBackgroundColor()}`}>\r\n                    <div className='TaskHeader '>\r\n                        <p>{props.title}</p>\r\n                        <button className={'TaskBtn'} onClick={()=>props.parentRemoveTaskHandler(props.id)}>Удалить</button>\r\n                    </div>\r\n                    <div>\r\n                        <div className='CompleteBlock'>\r\n                            <label htmlFor='complete'>Выполнено:</label>\r\n                            <input id='complete' type='checkbox' checked={props.done}\r\n                                onChange={()=>props.parentChangeDoneTaskHandler(props.id)}/>\r\n                            <p></p>\r\n                        </div>\r\n                    </div>\r\n            </div>)\r\n}\r\n\r\nTask.propTypes = {\r\n    id:PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    priority: PropTypes.string,\r\n    done: PropTypes.bool,\r\n    parentRemoveTaskHandler: PropTypes.func.isRequired,\r\n    parentChangeDoneTaskHandler: PropTypes.func.isRequired\r\n}"]},"metadata":{},"sourceType":"module"}