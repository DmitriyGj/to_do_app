{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskController\\\\TaskController.js\",\n    _s = $RefreshSig$();\n\nimport { PrioritySelector } from \"../PrioritySelector/PrioritySelector\";\nimport { useState, useContext } from \"react\";\nimport uuid from \"react-uuid\";\nimport { theme, ThemeContext } from '../../../contexts/ThemeContext';\nimport './TaskContoller.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskController(props) {\n  _s();\n\n  const [taskTitle, setTaskTitle] = useState('');\n  const [taskPriority, setTaskPriority] = useState('Low');\n  const theme = useContext(ThemeContext);\n\n  const changeTaskPriorityHandler = e => {\n    setTaskPriority({\n      taskPriority: e.target.value\n    });\n  };\n\n  const addTaskHandler = () => {\n    if (!taskTitle) {\n      alert('Название не может быть пустым');\n      return;\n    }\n\n    props.parent.addTaskHandler({\n      id: uuid(),\n      done: false,\n      priority: taskPriority,\n      title: taskTitle\n    });\n    setTaskTitle('');\n    setTaskPriority('Low');\n  };\n\n  const changeTaskTitleHandler = e => {\n    setTaskTitle(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TaskController ${theme}Controller`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\" \\u0417\\u0430\\u0433\\u043E\\u043B\\u043E\\u0432\\u043E\\u043A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: theme + 'ControllerInput',\n        type: \"text\",\n        value: taskTitle,\n        onChange: changeTaskTitleHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n      value: theme,\n      children: /*#__PURE__*/_jsxDEV(PrioritySelector, {\n        parentValue: taskPriority,\n        parentChangeHandler: changeTaskPriorityHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: theme + 'ControllerBtn',\n      onClick: addTaskHandler,\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }, this);\n}\n\n_s(TaskController, \"1jVXTkSn5dzKeLO7OyPHEyzfWHs=\");\n\n_c = TaskController;\nTaskController.propTypes = {\n  parent: PropTypes.object\n};\nexport { TaskController };\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskController\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskController/TaskController.js"],"names":["PrioritySelector","useState","useContext","uuid","theme","ThemeContext","PropTypes","TaskController","props","taskTitle","setTaskTitle","taskPriority","setTaskPriority","changeTaskPriorityHandler","e","target","value","addTaskHandler","alert","parent","id","done","priority","title","changeTaskTitleHandler","propTypes","object"],"mappings":";;;AAAA,SAAQA,gBAAR,QAA+B,sCAA/B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAAQC,KAAR,EAAeC,YAAf,QAAkC,gCAAlC;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAAA;;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMG,KAAK,GAAGF,UAAU,CAACG,YAAD,CAAxB;;AAEA,QAAMQ,yBAAyB,GAAIC,CAAD,IAAM;AACpCF,IAAAA,eAAe,CAAC;AAACD,MAAAA,YAAY,EAACG,CAAC,CAACC,MAAF,CAASC;AAAvB,KAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAK;AACxB,QAAG,CAACR,SAAJ,EAAc;AACVS,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACA;AACH;;AAEDV,IAAAA,KAAK,CAACW,MAAN,CAAaF,cAAb,CAA4B;AAACG,MAAAA,EAAE,EAACjB,IAAI,EAAR;AACxBkB,MAAAA,IAAI,EAAC,KADmB;AAExBC,MAAAA,QAAQ,EAACX,YAFe;AAGxBY,MAAAA,KAAK,EAAEd;AAHiB,KAA5B;AAKAC,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAbD;;AAeA,QAAMY,sBAAsB,GAAIV,CAAD,IAAO;AAClCJ,IAAAA,YAAY,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,sBACY;AAAK,IAAA,SAAS,EAAG,kBAAiBZ,KAAM,YAAxC;AAAA,4BACI;AAAA,yFACI;AAAO,QAAA,SAAS,EAAEA,KAAK,GAAC,iBAAxB;AACI,QAAA,IAAI,EAAG,MADX;AAEI,QAAA,KAAK,EAAEK,SAFX;AAGI,QAAA,QAAQ,EAAEe;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAIpB,KAAhC;AAAA,6BACI,QAAC,gBAAD;AAAkB,QAAA,WAAW,EAAGO,YAAhC;AACY,QAAA,mBAAmB,EAAIE;AADnC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,eAWI;AAAQ,MAAA,SAAS,EAAET,KAAK,GAAC,eAAzB;AAA0C,MAAA,OAAO,EAAEa,cAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAeH;;GA5CQV,c;;KAAAA,c;AA8CTA,cAAc,CAACkB,SAAf,GAA0B;AACtBN,EAAAA,MAAM,EAAEb,SAAS,CAACoB;AADI,CAA1B;AAIA,SAAQnB,cAAR","sourcesContent":["import {PrioritySelector} from \"../PrioritySelector/PrioritySelector\";\r\nimport {useState, useContext} from \"react\";\r\nimport uuid from \"react-uuid\";\r\nimport {theme, ThemeContext} from '../../../contexts/ThemeContext';\r\nimport './TaskContoller.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TaskController(props){\r\n\r\n    const [taskTitle, setTaskTitle] = useState('');\r\n    const [taskPriority, setTaskPriority] = useState('Low')\r\n    const theme = useContext(ThemeContext);\r\n\r\n    const changeTaskPriorityHandler = (e) =>{\r\n        setTaskPriority({taskPriority:e.target.value});\r\n    }\r\n\r\n    const addTaskHandler = () =>{\r\n        if(!taskTitle){\r\n            alert('Название не может быть пустым')\r\n            return;\r\n        }\r\n\r\n        props.parent.addTaskHandler({id:uuid(),\r\n            done:false,\r\n            priority:taskPriority,\r\n            title :taskTitle});\r\n            \r\n        setTaskTitle('');\r\n        setTaskPriority('Low');    \r\n    }\r\n\r\n    const changeTaskTitleHandler = (e) => {\r\n        setTaskTitle(e.target.value);\r\n    }\r\n\r\n    return (\r\n                <div className={`TaskController ${theme}Controller`}>\r\n                    <label> Заголовок\r\n                        <input className={theme+'ControllerInput'} \r\n                            type = 'text' \r\n                            value={taskTitle}\r\n                            onChange={changeTaskTitleHandler} />\r\n                    </label>\r\n                    <ThemeContext.Provider value = {theme}>\r\n                        <PrioritySelector parentValue ={taskPriority}\r\n                                    parentChangeHandler = {changeTaskPriorityHandler}/>\r\n                    </ThemeContext.Provider>\r\n                    <button className={theme+'ControllerBtn'} onClick={addTaskHandler}>Добавить</button>\r\n                </div>\r\n        );\r\n}\r\n\r\nTaskController.propTypes ={\r\n    parent: PropTypes.object\r\n};\r\n\r\nexport {TaskController};\r\n"]},"metadata":{},"sourceType":"module"}