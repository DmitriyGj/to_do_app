{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action, reaction } from 'mobx';\nimport uuid from 'react-uuid';\n\nclass TaskStore {\n  constructor() {\n    this.todos = [];\n    this.taskFilterName = TaskFilter.All.name;\n    this.filteredTasks = this.todos.filter(TaskFilter[this.TaskFilterName].func);\n    makeObservable(this, {\n      filteredTasks: observable,\n      taskFilterName: observable,\n      todos: observable,\n      AddTask: action,\n      RemoveTask: action,\n      GetTasks: action,\n      ChangeFilter: action\n    });\n    reaction(() => this.todos, _ => console.log(this.todos));\n  }\n\n  FilterTasks() {\n    this.filteredTasks = this.todos.filter(this.TaskFilter.TaskFilterName.func);\n  }\n\n  AddTask(task) {\n    this.todos = [...this.todos, { ...task,\n      id: uuid()\n    }];\n    this.FilterTasks();\n  }\n\n  RemoveTask(taskId) {\n    this.todos = this.todos.filter(task => task.id !== taskId);\n    this.FilterTasks();\n  }\n\n  ToogleStatusTask(taskId) {\n    this.todos = this.todos.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n    this.FilterTasks();\n  }\n\n  ChangeFilter(filterName) {\n    this.taskFilterName = filterName;\n    this.FilterTasks();\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","reaction","uuid","TaskStore","constructor","todos","taskFilterName","All","name","filteredTasks","filter","TaskFilterName","func","AddTask","RemoveTask","GetTasks","ChangeFilter","_","console","log","FilterTasks","task","id","taskId","ToogleStatusTask","map","initTask","done","filterName"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,EAAyEC,QAAzE,QAAyF,MAAzF;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAN,CAAe;AAMXC,EAAAA,WAAW,GAAE;AAAA,SALbC,KAKa,GALL,EAKK;AAAA,SAJbC,cAIa,GAJIX,UAAU,CAACY,GAAX,CAAeC,IAInB;AAAA,SAHbC,aAGa,GAHG,KAAKJ,KAAL,CAAWK,MAAX,CAAkBf,UAAU,CAAC,KAAKgB,cAAN,CAAV,CAAgCC,IAAlD,CAGH;AACTf,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBY,MAAAA,aAAa,EAACX,UADE;AAEhBQ,MAAAA,cAAc,EAACR,UAFC;AAGhBO,MAAAA,KAAK,EAACP,UAHU;AAIhBe,MAAAA,OAAO,EAACb,MAJQ;AAKhBc,MAAAA,UAAU,EAACd,MALK;AAMhBe,MAAAA,QAAQ,EAACf,MANO;AAOhBgB,MAAAA,YAAY,EAAChB;AAPG,KAAN,CAAd;AASAC,IAAAA,QAAQ,CAAC,MAAI,KAAKI,KAAV,EAAgBY,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAjB,CAAnB,CAAR;AACH;;AAEDe,EAAAA,WAAW,GAAE;AAAC,SAAKX,aAAL,GAAqB,KAAKJ,KAAL,CAAWK,MAAX,CAAkB,KAAKf,UAAL,CAAgBgB,cAAhB,CAA+BC,IAAjD,CAArB;AAA6E;;AAE3FC,EAAAA,OAAO,CAACQ,IAAD,EAAM;AACT,SAAKhB,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAe,EAAC,GAAGgB,IAAJ;AAASC,MAAAA,EAAE,EAACpB,IAAI;AAAhB,KAAf,CAAb;AACA,SAAKkB,WAAL;AACH;;AAEDN,EAAAA,UAAU,CAACS,MAAD,EAAQ;AACd,SAAKlB,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBW,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAYC,MAApC,CAAb;AACA,SAAKH,WAAL;AACH;;AAEDI,EAAAA,gBAAgB,CAACD,MAAD,EAAQ;AACpB,SAAKlB,KAAL,GAAY,KAAKA,KAAL,CAAWoB,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,KAAgBC,MAAhB,GAAyB,EAAC,GAAGG,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACA,SAAKN,WAAL;AACH;;AAEDJ,EAAAA,YAAY,CAACY,UAAD,EAAY;AACpB,SAAKtB,cAAL,GAAsBsB,UAAtB;AACA,SAAKR,WAAL;AACH;;AAvCU;;AA0Cf,eAAgB,IAAIjB,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action, reaction } from 'mobx';\r\nimport uuid from 'react-uuid';\r\n\r\nclass TaskStore{\r\n    todos = []\r\n    taskFilterName = TaskFilter.All.name\r\n    filteredTasks = this.todos.filter(TaskFilter[this.TaskFilterName].func);\r\n\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            filteredTasks:observable,\r\n            taskFilterName:observable,\r\n            todos:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            GetTasks:action,\r\n            ChangeFilter:action\r\n        });\r\n        reaction(()=>this.todos,_=>console.log(this.todos));\r\n    }\r\n\r\n    FilterTasks(){this.filteredTasks = this.todos.filter(this.TaskFilter.TaskFilterName.func);}\r\n\r\n    AddTask(task){\r\n        this.todos = [...this.todos,{...task,id:uuid()}];\r\n        this.FilterTasks();\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        this.todos = this.todos.filter(task=>task.id !== taskId) \r\n        this.FilterTasks();\r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.todos= this.todos.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n        this.FilterTasks();\r\n    }\r\n\r\n    ChangeFilter(filterName){\r\n        this.taskFilterName = filterName;\r\n        this.FilterTasks();\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}