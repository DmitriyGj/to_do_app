{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action, reaction } from 'mobx';\nimport uuid from 'react-uuid';\n\nclass TaskStore {\n  constructor() {\n    this.todos = [];\n    this.taskFilter = TaskFilter.All;\n    makeObservable(this, {\n      taskFilter: observable,\n      todos: observable,\n      AddTask: action,\n      RemoveTask: action,\n      GetTasks: computed\n    });\n    reaction(() => this.todos, _ => console.log(this.todos));\n  }\n\n  get GetTasks() {\n    return this.todos.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.todos = [...this.todos, task];\n  }\n\n  RemoveTask(taskId) {\n    this.todos = this.todos.filter(task => task.id !== taskId);\n  }\n\n  ToogleStatusTask(taskId) {\n    this.todos = this.todos.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","reaction","uuid","TaskStore","constructor","todos","taskFilter","All","AddTask","RemoveTask","GetTasks","_","console","log","filter","func","task","taskId","id","ToogleStatusTask","map","initTask","done"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,EAAyEC,QAAzE,QAAyF,MAAzF;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,EAGK;AAAA,SAFbC,UAEa,GAFAX,UAAU,CAACY,GAEX;AACTV,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBS,MAAAA,UAAU,EAACR,UADK;AAEhBO,MAAAA,KAAK,EAACP,UAFU;AAGhBU,MAAAA,OAAO,EAACR,MAHQ;AAIhBS,MAAAA,UAAU,EAACT,MAJK;AAKhBU,MAAAA,QAAQ,EAACX;AALO,KAAN,CAAd;AAOAE,IAAAA,QAAQ,CAAC,MAAI,KAAKI,KAAV,EAAgBM,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CAAnB,CAAR;AACH;;AAEW,MAARK,QAAQ,GAAE;AAAC,WAAO,KAAKL,KAAL,CAAWS,MAAX,CAAkB,KAAKR,UAAL,CAAgBS,IAAlC,CAAP;AAAgD;;AAE/DP,EAAAA,OAAO,CAACQ,IAAD,EAAM;AACT,SAAKX,KAAL,GAAa,CAAC,GAAG,KAAKA,KAAT,EAAeW,IAAf,CAAb;AACH;;AAEDP,EAAAA,UAAU,CAACQ,MAAD,EAAQ;AACd,SAAKZ,KAAL,GAAa,KAAKA,KAAL,CAAWS,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACE,EAAL,KAAYD,MAApC,CAAb;AACH;;AAEDE,EAAAA,gBAAgB,CAACF,MAAD,EAAQ;AACpB,SAAKZ,KAAL,GAAY,KAAKA,KAAL,CAAWe,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGI,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACH;;AA3BU;;AA8Bf,eAAgB,IAAIlB,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action, reaction } from 'mobx';\r\nimport uuid from 'react-uuid';\r\n\r\nclass TaskStore{\r\n    todos = []\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            taskFilter:observable,\r\n            todos:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            GetTasks:computed\r\n        });\r\n        reaction(()=>this.todos,_=>console.log(this.todos));\r\n    }\r\n\r\n    get GetTasks(){return this.todos.filter(this.taskFilter.func);}\r\n\r\n    AddTask(task){\r\n        this.todos = [...this.todos,task];\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        this.todos = this.todos.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.todos= this.todos.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}