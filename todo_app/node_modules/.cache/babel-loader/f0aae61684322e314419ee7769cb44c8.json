{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\Task\\\\Task.jsx\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport { useContext, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport './Task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task(props) {\n  const defineBackgroundColor = () => {\n    switch (props.priority) {\n      case 'High':\n        {\n          return 'HighPriorityTask';\n        }\n\n      case 'Medium':\n        {\n          return 'MediumPriorityTask';\n        }\n\n      case 'Low':\n        {\n          return 'LowPriorityTask';\n        }\n\n      default:\n        {\n          return '';\n        }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n    children: value => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `Task ${value + this.defineBackgroundColor()}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TaskHeader \",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: value + 'TaskBtn',\n          onClick: () => this.props.parentRemoveTaskHandler(this.props.id),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CompleteBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"complete\",\n          children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"complete\",\n          type: \"checkbox\",\n          checked: this.props.done,\n          onChange: () => this.props.parentChangeDoneTaskHandler(this.props.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 14\n  }, this);\n}\n\n_c = Task;\nTask.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  priority: PropTypes.string,\n  done: PropTypes.bool,\n  parentRemoveTaskHandler: PropTypes.func.isRequired,\n  parentChangeDoneTaskHandler: PropTypes.func.isRequired\n};\nexport { Task };\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/Task/Task.jsx"],"names":["ThemeContext","useContext","useState","PropTypes","Task","props","defineBackgroundColor","priority","value","title","parentRemoveTaskHandler","id","done","parentChangeDoneTaskHandler","propTypes","string","isRequired","bool","func"],"mappings":";AAAA,SAASA,YAAT,QAA6B,6BAA7B;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,QAAMC,qBAAqB,GAAE,MAAI;AAC7B,YAAQD,KAAK,CAACE,QAAd;AACI,WAAK,MAAL;AAAY;AACR,iBAAO,kBAAP;AACH;;AACD,WAAK,QAAL;AAAc;AACV,iBAAO,oBAAP;AACH;;AACD,WAAK,KAAL;AAAW;AACP,iBAAQ,iBAAR;AACH;;AACD;AAAS;AACL,iBAAO,EAAP;AACH;AAZL;AAcH,GAfD;;AAiBA,sBAAS,QAAC,YAAD,CAAc,QAAd;AAAA,cAAyBC,KAAK,iBACnC;AAAK,MAAA,SAAS,EAAG,QAAOA,KAAK,GAAC,KAAKF,qBAAL,EAA6B,EAA3D;AAAA,8BACY;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAA,oBAAI,KAAKD,KAAL,CAAWI;AAAf;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAED,KAAK,GAAC,SAAzB;AAAoC,UAAA,OAAO,EAAE,MAAI,KAAKH,KAAL,CAAWK,uBAAX,CAAmC,KAAKL,KAAL,CAAWM,EAA9C,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADZ,eAKY;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,EAAE,EAAC,UAAV;AAAqB,UAAA,IAAI,EAAC,UAA1B;AAAqC,UAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,IAAzD;AACO,UAAA,QAAQ,EAAE,MAAI,KAAKP,KAAL,CAAWQ,2BAAX,CAAuC,KAAKR,KAAL,CAAWM,EAAlD;AADrB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAT;AAaH;;KA/BQP,I;AAiCTA,IAAI,CAACU,SAAL,GAAiB;AACbH,EAAAA,EAAE,EAACR,SAAS,CAACY,MADA;AAEbN,EAAAA,KAAK,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UAFX;AAGbT,EAAAA,QAAQ,EAAEJ,SAAS,CAACY,MAHP;AAIbH,EAAAA,IAAI,EAAET,SAAS,CAACc,IAJH;AAKbP,EAAAA,uBAAuB,EAAEP,SAAS,CAACe,IAAV,CAAeF,UAL3B;AAMbH,EAAAA,2BAA2B,EAAEV,SAAS,CAACe,IAAV,CAAeF;AAN/B,CAAjB;AASA,SAAQZ,IAAR","sourcesContent":["import { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport { useContext, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './Task.css'\r\n\r\nfunction Task(props) {\r\n    const defineBackgroundColor =()=>{\r\n        switch (props.priority){\r\n            case 'High':{\r\n                return 'HighPriorityTask';\r\n            }\r\n            case 'Medium':{\r\n                return 'MediumPriorityTask';\r\n            }\r\n            case 'Low':{\r\n                return  'LowPriorityTask';\r\n            }\r\n            default: {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( <ThemeContext.Consumer>{ value=>\r\n        <div className={`Task ${value+this.defineBackgroundColor()}`}>\r\n                    <div className='TaskHeader '>\r\n                        <p>{this.props.title}</p>\r\n                        <button className={value+'TaskBtn'} onClick={()=>this.props.parentRemoveTaskHandler(this.props.id)}>Удалить</button>\r\n                    </div>\r\n                    <div className='CompleteBlock'>\r\n                        <label htmlFor='complete'>Выполнено:</label>\r\n                        <input id='complete' type='checkbox' checked={this.props.done}\r\n                               onChange={()=>this.props.parentChangeDoneTaskHandler(this.props.id)}/>\r\n                    </div>\r\n            </div>}\r\n        </ThemeContext.Consumer> )\r\n}\r\n\r\nTask.propTypes = {\r\n    id:PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    priority: PropTypes.string,\r\n    done: PropTypes.bool,\r\n    parentRemoveTaskHandler: PropTypes.func.isRequired,\r\n    parentChangeDoneTaskHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport {Task}"]},"metadata":{},"sourceType":"module"}