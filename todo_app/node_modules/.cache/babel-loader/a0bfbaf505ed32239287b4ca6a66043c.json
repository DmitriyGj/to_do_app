{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: []\n};\nexport const taskerSlice = createSlice({\n  name: 'taskStore',\n  initialState: {\n    tasks: []\n  },\n  reducers: {\n    addTask: (state, action) => {\n      const newTask = action.payload;\n\n      if (state.tasks.some(initTask => initTask.title === newTask.title)) {\n        alert('Такое задание уже существует');\n      } else {\n        state.tasks.push(newTask);\n      }\n    },\n    removeTask: (state, action) => {\n      const taskId = action.payload;\n      state.tasks = state.tasks.filter(initTask => initTask.id !== taskId);\n    },\n    changeDoneState: (state, action) => {\n      const taskId = action.payload;\n      state.tasks = state.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    }\n  }\n});\nexport const {\n  addTask,\n  removeTask,\n  changeDoneState\n} = taskerSlice.actions;\nexport default taskerSlice.reducer;","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/redux/tasker.js"],"names":["createSlice","initialState","tasks","taskerSlice","name","reducers","addTask","state","action","newTask","payload","some","initTask","title","alert","push","removeTask","taskId","filter","id","changeDoneState","map","done","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAC;AADU,CAApB;AAIA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAC,WAD8B;AAEnCH,EAAAA,YAAY,EAAC;AACTC,IAAAA,KAAK,EAAC;AADG,GAFsB;AAKnCG,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;;AACA,UAAGH,KAAK,CAACL,KAAN,CAAYS,IAAZ,CAAiBC,QAAQ,IAAGA,QAAQ,CAACC,KAAT,KAAmBJ,OAAO,CAACI,KAAvD,CAAH,EAAiE;AAC7DC,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAFD,MAGI;AACAP,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiBN,OAAjB;AACH;AACJ,KATI;AAULO,IAAAA,UAAU,EAAC,CAACT,KAAD,EAAOC,MAAP,KAAgB;AACvB,YAAMS,MAAM,GAAGT,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYgB,MAAZ,CAAmBN,QAAQ,IAAGA,QAAQ,CAACO,EAAT,KAAgBF,MAA9C,CAAd;AACH,KAbI;AAcLG,IAAAA,eAAe,EAAC,CAACb,KAAD,EAAOC,MAAP,KAAgB;AAC5B,YAAMS,MAAM,GAAGT,MAAM,CAACE,OAAtB;AACAH,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYmB,GAAZ,CAAgBT,QAAQ,IAAIA,QAAQ,CAACO,EAAT,KAAgBF,MAAhB,GAAyB,EAAC,GAAGL,QAAJ;AAAaU,QAAAA,IAAI,EAAC,CAACV,QAAQ,CAACU;AAA5B,OAAzB,GAA2DV,QAAvF,CAAd;AACH;AAjBI;AAL0B,CAAD,CAA/B;AA0BP,OAAO,MAAM;AAACN,EAAAA,OAAD;AAAUU,EAAAA,UAAV;AAAsBI,EAAAA;AAAtB,IAAyCjB,WAAW,CAACoB,OAA3D;AACP,eAAepB,WAAW,CAACqB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState ={\r\n    tasks:[]\r\n};\r\n\r\nexport const taskerSlice = createSlice({\r\n    name:'taskStore',\r\n    initialState:{\r\n        tasks:[] \r\n    },\r\n    reducers:{\r\n        addTask:(state,action)=>{\r\n            const newTask = action.payload;\r\n            if(state.tasks.some(initTask=> initTask.title === newTask.title)){\r\n                alert('Такое задание уже существует');\r\n            }\r\n            else{\r\n                state.tasks.push(newTask);\r\n            }\r\n        },\r\n        removeTask:(state,action)=>{\r\n            const taskId = action.payload;\r\n            state.tasks = state.tasks.filter(initTask=> initTask.id !== taskId);\r\n        },\r\n        changeDoneState:(state,action)=>{\r\n            const taskId = action.payload;\r\n            state.tasks = state.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addTask, removeTask, changeDoneState} = taskerSlice.actions;\r\nexport default taskerSlice.reducer;"]},"metadata":{},"sourceType":"module"}