{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: []\n};\nexport const taskerSlice = createSlice({\n  name: 'tasker',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      if (state.tasks.some(initTask => initTask.title === action.task.title)) {\n        alert('Такое задание уже существует');\n      } else {\n        state.tasks.push(action.task);\n      }\n    },\n    removeTask: (state, action) => {\n      state.tasks = state.tasks.filter(initTask => initTask.id !== action.task.id);\n    },\n    changeDoneState: (state, action) => {\n      const {\n        taskId\n      } = action.taskId;\n      state.tasks = state.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    }\n  }\n});\nexport const {\n  addTask,\n  removeTask,\n  changeDoneState\n} = taskerSlice.actions;\nexport default taskerSlice.reducer;","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/redux/tasker.js"],"names":["createSlice","initialState","tasks","taskerSlice","name","reducers","addTask","state","action","some","initTask","title","task","alert","push","removeTask","filter","id","changeDoneState","taskId","map","done","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAC;AAAP,CAArB;AAEA,OAAO,MAAMC,WAAW,GAAGH,WAAW,CAAC;AACnCI,EAAAA,IAAI,EAAC,QAD8B;AAEnCH,EAAAA,YAFmC;AAGnCI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpB,UAAGD,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiBC,QAAQ,IAAGA,QAAQ,CAACC,KAAT,KAAmBH,MAAM,CAACI,IAAP,CAAYD,KAA3D,CAAH,EAAqE;AACjEE,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAFD,MAGI;AACAN,QAAAA,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAiBN,MAAM,CAACI,IAAxB;AACH;AACJ,KARI;AASLG,IAAAA,UAAU,EAAC,CAACR,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYc,MAAZ,CAAmBN,QAAQ,IAAGA,QAAQ,CAACO,EAAT,KAAgBT,MAAM,CAACI,IAAP,CAAYK,EAA1D,CAAd;AACH,KAXI;AAYLC,IAAAA,eAAe,EAAC,CAACX,KAAD,EAAOC,MAAP,KAAgB;AAC5B,YAAM;AAACW,QAAAA;AAAD,UAAWX,MAAM,CAACW,MAAxB;AACAZ,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYkB,GAAZ,CAAgBV,QAAQ,IAAIA,QAAQ,CAACO,EAAT,KAAgBE,MAAhB,GAAyB,EAAC,GAAGT,QAAJ;AAAaW,QAAAA,IAAI,EAAC,CAACX,QAAQ,CAACW;AAA5B,OAAzB,GAA2DX,QAAvF,CAAd;AACH;AAfI;AAH0B,CAAD,CAA/B;AAsBP,OAAO,MAAM;AAACJ,EAAAA,OAAD;AAAUS,EAAAA,UAAV;AAAsBG,EAAAA;AAAtB,IAAyCf,WAAW,CAACmB,OAA3D;AACP,eAAenB,WAAW,CAACoB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {tasks:[]};\r\n\r\nexport const taskerSlice = createSlice({\r\n    name:'tasker',\r\n    initialState,\r\n    reducers:{\r\n        addTask:(state,action)=>{\r\n            if(state.tasks.some(initTask=> initTask.title === action.task.title)){\r\n                alert('Такое задание уже существует');\r\n            }\r\n            else{\r\n                state.tasks.push(action.task);\r\n            }\r\n        },\r\n        removeTask:(state,action)=>{\r\n            state.tasks = state.tasks.filter(initTask=> initTask.id !== action.task.id);\r\n        },\r\n        changeDoneState:(state,action)=>{\r\n            const {taskId} = action.taskId;\r\n            state.tasks = state.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addTask, removeTask, changeDoneState} = taskerSlice.actions;\r\nexport default taskerSlice.reducer;"]},"metadata":{},"sourceType":"module"}