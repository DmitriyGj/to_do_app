{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\Task\\\\Task.jsx\";\nimport { Component } from \"react\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport PropTypes from 'prop-types';\nimport './Task.css';\nimport { TaskBgColors } from \"../../Constants/Constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Task extends Component {\n  render() {\n    const {\n      id,\n      title,\n      priority,\n      done,\n      changeDoneTaskParentHandler,\n      removeTaskParentHandler\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(ThemeContext.Consumer, {\n      children: value => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `Task ${value + TaskBgColors[priority]}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TaskHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"TaskControls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${value}TaskBtn`,\n              onClick: () => removeTaskParentHandler(id),\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"CompleteBlock\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"complete\",\n            children: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"complete\",\n            type: \"checkbox\",\n            checked: done,\n            onChange: () => changeDoneTaskParentHandler(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n}\nTask.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  priority: PropTypes.string,\n  done: PropTypes.bool,\n  removeTaskParentHandler: PropTypes.func.isRequired,\n  changeDoneTasParentkHandler: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/Task/Task.jsx"],"names":["Component","ThemeContext","PropTypes","TaskBgColors","Task","render","id","title","priority","done","changeDoneTaskParentHandler","removeTaskParentHandler","props","value","propTypes","string","isRequired","bool","func","changeDoneTasParentkHandler"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,YAAP;AACA,SAASC,YAAT,QAA6B,2BAA7B;;AAEA,OAAO,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAC/BK,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA,KAAL;AAAYC,MAAAA,QAAZ;AAAuBC,MAAAA,IAAvB;AAA6BC,MAAAA,2BAA7B;AAA0DC,MAAAA;AAA1D,QAAqF,KAAKC,KAAhG;AAEA,wBAAO,QAAC,YAAD,CAAc,QAAd;AAAA,gBAAyBC,KAAK,iBAC7B;AAAK,QAAA,SAAS,EAAG,QAAOA,KAAK,GAACV,YAAY,CAACK,QAAD,CAAW,EAArD;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA,sBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,mCACI;AAAQ,cAAA,SAAS,EAAG,GAAEM,KAAM,SAA5B;AACQ,cAAA,OAAO,EAAE,MAAIF,uBAAuB,CAACL,EAAD,CAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,EAAE,EAAC,UAAV;AACO,YAAA,IAAI,EAAC,UADZ;AAEO,YAAA,OAAO,EAAEG,IAFhB;AAGO,YAAA,QAAQ,EAAE,MAAIC,2BAA2B,CAACJ,EAAD;AAHhD;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAAP;AAkBH;;AAvB8B;AA0BnCF,IAAI,CAACU,SAAL,GAAiB;AACbR,EAAAA,EAAE,EAACJ,SAAS,CAACa,MADA;AAEbR,EAAAA,KAAK,EAAEL,SAAS,CAACa,MAAV,CAAiBC,UAFX;AAGbR,EAAAA,QAAQ,EAAEN,SAAS,CAACa,MAHP;AAIbN,EAAAA,IAAI,EAAEP,SAAS,CAACe,IAJH;AAKbN,EAAAA,uBAAuB,EAAET,SAAS,CAACgB,IAAV,CAAeF,UAL3B;AAMbG,EAAAA,2BAA2B,EAAEjB,SAAS,CAACgB,IAAV,CAAeF;AAN/B,CAAjB","sourcesContent":["import {Component} from \"react\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport PropTypes from 'prop-types';\r\nimport './Task.css'\r\nimport { TaskBgColors } from \"../../Constants/Constants\";\r\n\r\nexport class Task extends Component{\r\n    render(){\r\n\r\n        const {id, title, priority , done, changeDoneTaskParentHandler, removeTaskParentHandler} = this.props; \r\n\r\n        return <ThemeContext.Consumer>{ value=>\r\n                <div className={`Task ${value+TaskBgColors[priority]}`}>\r\n                    <div className='TaskHeader'>\r\n                        <h1>{title}</h1>\r\n                        <div className='TaskControls'>\r\n                            <button className={`${value}TaskBtn`} \r\n                                    onClick={()=>removeTaskParentHandler(id)}>Удалить</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className='CompleteBlock'>\r\n                        <label htmlFor='complete'>Выполнено:</label>\r\n                        <input id='complete' \r\n                               type='checkbox' \r\n                               checked={done}\r\n                               onChange={()=>changeDoneTaskParentHandler(id)}/>\r\n                    </div>\r\n            </div>}\r\n        </ThemeContext.Consumer> \r\n    }\r\n}\r\n\r\nTask.propTypes = {\r\n    id:PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    priority: PropTypes.string,\r\n    done: PropTypes.bool,\r\n    removeTaskParentHandler: PropTypes.func.isRequired,\r\n    changeDoneTasParentkHandler: PropTypes.func.isRequired\r\n}\r\n"]},"metadata":{},"sourceType":"module"}