{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskHolder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useCallback } from 'react';\nimport './TaskHolder.css';\nimport { TaskController } from './TaskController/TaskController';\nimport { Task } from '../Task/Task';\nimport { addLodaing } from '../../HOCs/LoaderHOC';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { Selector } from '../Selector/Selector';\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWithLoading = addLodaing(Task);\n_c = TaskWithLoading;\nexport const TaskHolderView = observer(_c2 = _ref => {\n  let {\n    tasksStore\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(TaskHolder, {\n    tasksStore: tasksStore\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 56\n  }, this);\n});\n_c3 = TaskHolderView;\nconst TaskControllerView = observer(_c4 = _ref2 => {\n  let {\n    tasksStore\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(TaskController, {\n    tasksStore: tasksStore\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 54\n  }, this);\n});\n_c5 = TaskControllerView;\nexport function TaskHolder(props) {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const tasksStore = useContext(props.tasksStore);\n  const {\n    AddTask,\n    RemoveTask\n  } = taskStore;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TaskHolder ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TaskController, {\n        addTaskParentHandler: AddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.tasksStore.todos.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(TaskWithLoading, { ...task,\n          removeTaskParentHandler: props.tasksStore.RemoveTask,\n          changeDoneTaskParentHandler: props.tasksStore.ToogleStatusTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 55\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }, this);\n}\n\n_s(TaskHolder, \"WMvfA8Vx5ypIYCm199cIdckKAzE=\");\n\n_c6 = TaskHolder;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"TaskWithLoading\");\n$RefreshReg$(_c2, \"TaskHolderView$observer\");\n$RefreshReg$(_c3, \"TaskHolderView\");\n$RefreshReg$(_c4, \"TaskControllerView$observer\");\n$RefreshReg$(_c5, \"TaskControllerView\");\n$RefreshReg$(_c6, \"TaskHolder\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskHolder.jsx"],"names":["useState","useContext","useCallback","TaskController","Task","addLodaing","ThemeContext","Selector","TaskFilterOptions","TaskFilter","observer","TaskWithLoading","TaskHolderView","tasksStore","TaskControllerView","TaskHolder","props","theme","AddTask","RemoveTask","taskStore","todos","map","task","ToogleStatusTask","id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAiBC,UAAjB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,OAAO,kBAAP;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,eAAe,GAAGN,UAAU,CAACD,IAAD,CAAlC;KAAMO,e;AACN,OAAO,MAAMC,cAAc,GAAGF,QAAQ,OAAC;AAAA,MAAC;AAACG,IAAAA;AAAD,GAAD;AAAA,sBAAgB,QAAC,UAAD;AAAY,IAAA,UAAU,EAAIA;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAhB;AAAA,CAAD,CAA/B;MAAMD,c;AACb,MAAME,kBAAkB,GAAGJ,QAAQ,OAAC;AAAA,MAAC;AAACG,IAAAA;AAAD,GAAD;AAAA,sBAAiB,QAAC,cAAD;AAAgB,IAAA,UAAU,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAjB;AAAA,CAAD,CAAnC;MAAMC,kB;AAEN,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA0B;AAAA;;AAC7B,QAAMC,KAAK,GAAGhB,UAAU,CAACK,YAAD,CAAxB;AACA,QAAMO,UAAU,GAAGZ,UAAU,CAACe,KAAK,CAACH,UAAP,CAA7B;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBC,SAA9B;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAG,cAAaH,KAAM,EAApC;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,cAAD;AAAgB,QAAA,oBAAoB,EAAEC;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,gBACKF,KAAK,CAACH,UAAN,CAAiBQ,KAAjB,CAAuBC,GAAvB,CAA2BC,IAAI,iBAAE;AAAA,+BAClB,QAAC,eAAD,OAAqBA,IAArB;AACA,UAAA,uBAAuB,EAAIP,KAAK,CAACH,UAAN,CAAiBM,UAD5C;AAEA,UAAA,2BAA2B,EAAIH,KAAK,CAACH,UAAN,CAAiBW;AAFhD;AAAA;AAAA;AAAA;AAAA;AADkB,SAAWD,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAjC;AADL;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH;;GArBeV,U;;MAAAA,U","sourcesContent":["import {useState,useContext, useCallback} from 'react'\r\nimport './TaskHolder.css'\r\nimport {TaskController} from './TaskController/TaskController';\r\nimport {Task} from '../Task/Task';\r\nimport { addLodaing } from '../../HOCs/LoaderHOC';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { Selector } from '../Selector/Selector';\r\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst TaskWithLoading = addLodaing(Task);\r\nexport const TaskHolderView = observer(({tasksStore})=><TaskHolder tasksStore = {tasksStore}/>)\r\nconst TaskControllerView = observer(({tasksStore})=> <TaskController tasksStore={tasksStore} />)\r\n\r\nexport function TaskHolder(props){\r\n    const theme = useContext(ThemeContext);\r\n    const tasksStore = useContext(props.tasksStore);\r\n    const {AddTask, RemoveTask} = taskStore;\r\n    return (<div className={`TaskHolder ${theme}`}>\r\n                <div className='MainInfo'>\r\n                    <h2>Управление заданиями</h2>\r\n                        <TaskController addTaskParentHandler={AddTask} />\r\n                        {/* <Selector title='Показать' \r\n                                        options={TaskFilterOptions}\r\n                                        changeValueParentHandler = {changeFilterHandler}\r\n                                        parentValue ={taskFilterName} /> */}\r\n                </div>\r\n                <ul>\r\n                    {props.tasksStore.todos.map(task=><li key = {task.id}>\r\n                                    <TaskWithLoading {...task} \r\n                                    removeTaskParentHandler = {props.tasksStore.RemoveTask}\r\n                                    changeDoneTaskParentHandler = {props.tasksStore.ToogleStatusTask}/> \r\n                                </li>)}\r\n                </ul>\r\n            </div> )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}