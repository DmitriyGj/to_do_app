{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeObservable, observable, computed, action } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.filteredTasks = tasks;\n    this.taskFilter = TaskFilter.All;\n\n    this.GetTasks = () => {\n      return this.tasks.filter(this.taskFilter.func);\n    };\n\n    this.AddTask = task => {\n      console.log(this);\n      this.tasks.push(task);\n    };\n\n    this.RemoveTask = taskId => {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    };\n\n    this.ToogleStatusTask = taskId => {\n      this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    };\n\n    makeObservable(this, {\n      tasks: observable,\n      GetTasks: action,\n      AddTask: action,\n      RemoveTask: action,\n      ToogleStatusTask: action\n    });\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeObservable","observable","computed","action","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","constructor","tasks","filteredTasks","taskFilter","All","GetTasks","filter","func","task","console","log","push","taskId","id","ToogleStatusTask","map","initTask","done"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,cAAT,EAAwBC,UAAxB,EAAoCC,QAApC,EAA8CC,MAA9C,QAA4D,MAA5D;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAKXC,EAAAA,WAAW,GAAE;AAAA,SAJbC,KAIa,GAJL,EAIK;AAAA,SAHbC,aAGa,GAHGD,KAGH;AAAA,SAFbE,UAEa,GAFAb,UAAU,CAACc,GAEX;;AAAA,SAUbC,QAVa,GAUH,MAAK;AAAC,aAAO,KAAKJ,KAAL,CAAWK,MAAX,CAAkB,KAAKH,UAAL,CAAgBI,IAAlC,CAAP;AAAgD,KAVnD;;AAAA,SAYbX,OAZa,GAYFY,IAAD,IAAQ;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,WAAKT,KAAL,CAAWU,IAAX,CAAgBH,IAAhB;AACH,KAfY;;AAAA,SAiBbX,UAjBa,GAiBCe,MAAD,IAAU;AACnB,WAAKX,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBE,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAYD,MAApC,CAAb;AACH,KAnBY;;AAAA,SAqBbE,gBArBa,GAqBKF,MAAD,IAAU;AACvB,WAAKX,KAAL,GAAY,KAAKA,KAAL,CAAWc,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGI,QAAJ;AAAaC,QAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,OAAzB,GAA2DD,QAAtF,CAAZ;AACH,KAvBY;;AACTzB,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBU,MAAAA,KAAK,EAAET,UADS;AAEhBa,MAAAA,QAAQ,EAACX,MAFO;AAGhBE,MAAAA,OAAO,EAACF,MAHQ;AAIhBG,MAAAA,UAAU,EAACH,MAJK;AAKhBoB,MAAAA,gBAAgB,EAACpB;AALD,KAAN,CAAd;AAOH;;AAbU;;AA+Bf,eAAe,IAAIK,SAAJ,EAAf","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeObservable,observable, computed, action } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n    tasks = []\r\n    filteredTasks = tasks\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            tasks: observable,\r\n            GetTasks:action,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            ToogleStatusTask:action,\r\n        })\r\n    }\r\n\r\n    GetTasks =() =>{return this.tasks.filter(this.taskFilter.func);}\r\n\r\n    AddTask = (task)=>{\r\n        console.log(this)\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    RemoveTask = (taskId)=>{\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask=(taskId)=>{\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default new TaskStore();"]},"metadata":{},"sourceType":"module"}