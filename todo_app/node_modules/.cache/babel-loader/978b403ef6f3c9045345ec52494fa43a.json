{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskContoller\\\\TaskController.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { addTask, editTask } from '../../reducers/TaskReduser';\nimport { useDispatch } from 'react-redux';\nimport { CustomSelect } from '../CustomSelect/CustomSelect';\nimport { TaskPriorityOptions, TaskPriorities } from '../../constants/TaskConstants';\nimport { onKeyDown, toDateString } from '../../functions/functions';\nimport './TaskController.css';\nexport const TaskController = function TaskController(_ref) {\n  let {\n    task,\n    closeModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState(task ? task.title : '');\n  const [priority, setPriority] = useState(task ? task.priority : TaskPriorities.Low);\n  const [deadLine, setDeadLine] = useState(task ? toDateString(task.deadLine) : toDateString(new Date()));\n\n  const clickOkHandler = () => {\n    if (!title) {\n      alert('Название не может быть пустым');\n      return;\n    }\n\n    if (!deadLine) {\n      alert('Укажите дедлайн');\n      return;\n    }\n\n    const action = task ? editTask : addTask;\n    const parsedDeadLine = new Date(Date.parse(deadLine));\n    dispatch(action({\n      id: task === null || task === void 0 ? void 0 : task.id,\n      title: title,\n      priority: priority,\n      deadLine: parsedDeadLine\n    }));\n    setTitle('');\n    setPriority(TaskPriorities.Low);\n    setDeadLine(toDateString(new Date()));\n    closeModal();\n  };\n\n  useEffect(() => {\n    const onKeydownHandler = e => onKeyDown('Enter', clickOkHandler)(e);\n\n    document.addEventListener('keydown', onKeydownHandler);\n    return () => document.removeEventListener('keydown', onKeydownHandler);\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"TaskController\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Task-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"title-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setTitle(e.target.value),\n    value: title,\n    id: \"titile-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomSelect, {\n    title: \"\\u041F\\u0440\\u0438\\u043E\\u0440\\u0438\\u0442\\u0435\\u0442\",\n    parentValue: priority,\n    options: TaskPriorityOptions,\n    changeValueParentHandler: setPriority,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"deadline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"\\u0414\\u0435\\u0434\\u043B\\u0430\\u0439\\u043D\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"deadline\",\n    value: deadLine,\n    onChange: e => setDeadLine(e.target.value),\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Add-button\",\n    onClick: clickOkHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"\\u041E\\u043A.\")));\n};","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskContoller/TaskController.tsx"],"names":["React","useState","useEffect","addTask","editTask","useDispatch","CustomSelect","TaskPriorityOptions","TaskPriorities","onKeyDown","toDateString","TaskController","task","closeModal","dispatch","title","setTitle","priority","setPriority","Low","deadLine","setDeadLine","Date","clickOkHandler","alert","action","parsedDeadLine","parse","id","onKeydownHandler","e","document","addEventListener","removeEventListener","target","value"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport { addTask,editTask } from '../../reducers/TaskReduser';\r\nimport { useDispatch } from 'react-redux';\r\nimport {CustomSelect} from '../CustomSelect/CustomSelect';\r\nimport {TaskPriorityOptions, TaskPriorities} from '../../constants/TaskConstants';\r\nimport { TaskContollerProps } from '../../types/types';\r\nimport { onKeyDown, toDateString } from '../../functions/functions';\r\nimport './TaskController.css'\r\n\r\nexport const TaskController:React.FunctionComponent<TaskContollerProps> = \r\nfunction TaskController({task,closeModal}:TaskContollerProps){\r\n    const dispatch = useDispatch();\r\n    const [title,setTitle] = useState(task? task.title: '');\r\n    const [priority,setPriority] = useState(task? task.priority:TaskPriorities.Low);\r\n    const [deadLine,setDeadLine] = useState(task? toDateString(task.deadLine):toDateString(new Date()));\r\n    \r\n    const clickOkHandler = ()=>{\r\n        if(!title){\r\n            alert('Название не может быть пустым');\r\n            return;\r\n        }\r\n        if(!deadLine){\r\n            alert('Укажите дедлайн');\r\n            return ;\r\n        }\r\n        const action =task? editTask:addTask;\r\n        const parsedDeadLine = new Date(Date.parse(deadLine));\r\n        dispatch(action({id:task?.id,title:title,priority:priority,deadLine:parsedDeadLine}));\r\n        setTitle('');\r\n        setPriority(TaskPriorities.Low);\r\n        setDeadLine(toDateString(new Date))\r\n        closeModal();\r\n    }\r\n\r\n    useEffect(() => {\r\n        const onKeydownHandler =(e:KeyboardEvent)=> onKeyDown('Enter',clickOkHandler)(e)\r\n        document.addEventListener('keydown',onKeydownHandler);\r\n        return () => document.removeEventListener('keydown', onKeydownHandler);\r\n    })\r\n\r\n    return(\r\n        <div className ='TaskController'>\r\n            <div className='Task-title'>\r\n                <label htmlFor='title-input'>Название</label>\r\n                <input  onChange = {(e)=>setTitle(e.target.value)}\r\n                        value = {title}\r\n                        id ='titile-input'/>\r\n            </div>\r\n            <div>\r\n                <CustomSelect title='Приоритет'\r\n                            parentValue={priority}\r\n                            options={TaskPriorityOptions}\r\n                            changeValueParentHandler={setPriority}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor='deadline'>Дедлайн</label>\r\n                <input id='deadline'\r\n                    value={deadLine}\r\n                    onChange={(e)=>setDeadLine(e.target.value)}\r\n                    type='date'/>\r\n            </div>\r\n            <div>\r\n                <button className='Add-button'\r\n                    onClick ={clickOkHandler}>Ок.</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}