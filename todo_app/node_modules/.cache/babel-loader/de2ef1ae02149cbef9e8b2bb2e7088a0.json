{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeAutoObservable, makeObservable, observable, computed, action } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  constructor() {\n    this.tasks = [];\n    this.taskFilter = TaskFilter.All;\n\n    this.AddTask = task => {\n      this.tasks = [...this.tasks, task];\n    };\n\n    this.RemoveTask = taskId => {\n      this.tasks = this.tasks.filter(task => task.id !== taskId);\n    };\n\n    this.ToogleStatusTask = taskId => {\n      this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    };\n\n    makeObservable(this, {\n      taskFilter: observable,\n      tasks: observable,\n      AddTask: action,\n      RemoveTask: action,\n      ToggleStatusTask: action,\n      GetTasks: computed\n    });\n  }\n\n  get GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeAutoObservable","makeObservable","observable","computed","action","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","constructor","tasks","taskFilter","All","task","taskId","filter","id","ToogleStatusTask","map","initTask","done","GetTasks","func"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,kBAAT,EAA4BC,cAA5B,EAA2CC,UAA3C,EAAuDC,QAAvD,EAAiEC,MAAjE,QAA+E,MAA/E;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAIXC,EAAAA,WAAW,GAAE;AAAA,SAHbC,KAGa,GAHL,EAGK;AAAA,SAFbC,UAEa,GAFAb,UAAU,CAACc,GAEX;;AAAA,SAabP,OAba,GAaJQ,IAAD,IAAQ;AACZ,WAAKH,KAAL,GAAY,CAAC,GAAG,KAAKA,KAAT,EAAeG,IAAf,CAAZ;AACH,KAfY;;AAAA,SAiBbP,UAjBa,GAiBDQ,MAAD,IAAU;AACjB,WAAKJ,KAAL,GAAa,KAAKA,KAAL,CAAWK,MAAX,CAAkBF,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAYF,MAApC,CAAb;AACH,KAnBY;;AAAA,SAqBbG,gBArBa,GAqBKH,MAAD,IAAU;AACvB,WAAKJ,KAAL,GAAY,KAAKA,KAAL,CAAWQ,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBF,MAAhB,GAAyB,EAAC,GAAGK,QAAJ;AAAaC,QAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,OAAzB,GAA2DD,QAAtF,CAAZ;AACH,KAvBY;;AACTnB,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBW,MAAAA,UAAU,EAACV,UADK;AAEhBS,MAAAA,KAAK,EAACT,UAFU;AAGhBI,MAAAA,OAAO,EAACF,MAHQ;AAIhBG,MAAAA,UAAU,EAACH,MAJK;AAKhBI,MAAAA,gBAAgB,EAACJ,MALD;AAMhBkB,MAAAA,QAAQ,EAACnB;AANO,KAAN,CAAd;AAQH;;AAEW,MAARmB,QAAQ,GAAE;AAAC,WAAO,KAAKX,KAAL,CAAWK,MAAX,CAAkB,KAAKJ,UAAL,CAAgBW,IAAlC,CAAP;AAAgD;;AAfpD;;AA8Bf,eAAe,IAAId,SAAJ,EAAf","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeAutoObservable,makeObservable,observable, computed, action } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n    tasks = []\r\n    taskFilter = TaskFilter.All\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            taskFilter:observable,\r\n            tasks:observable,\r\n            AddTask:action,\r\n            RemoveTask:action,\r\n            ToggleStatusTask:action,\r\n            GetTasks:computed\r\n        });\r\n    }\r\n\r\n    get GetTasks(){return this.tasks.filter(this.taskFilter.func);}\r\n\r\n    AddTask=(task)=>{\r\n        this.tasks= [...this.tasks,task];\r\n    }\r\n\r\n    RemoveTask=(taskId)=>{\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask=(taskId)=>{\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n}\r\n\r\nexport default new TaskStore();"]},"metadata":{},"sourceType":"module"}