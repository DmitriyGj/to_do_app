{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\Components\\\\TaskHolder\\\\TaskHolder.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useCallback } from 'react';\nimport './TaskHolder.css';\nimport { TaskController } from './TaskController/TaskController';\nimport { Task } from '../Task/Task';\nimport { addLodaing } from '../../HOCs/LoaderHOC';\nimport { ThemeContext } from '../../contexts/ThemeContext';\nimport { Selector } from '../Selector/Selector';\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\nimport { observer } from 'mobx-react-lite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskWithLoading = addLodaing(Task);\n_c = TaskWithLoading;\nexport const TaskHolder = _s(observer(_c2 = _s(_ref => {\n  _s();\n\n  let {\n    tasksStore\n  } = _ref;\n\n  const AddTask = task => tasksStore.AddTask(task);\n\n  const todos = tasksStore.todos;\n\n  const RemoveTask = taskId => tasksStore.RemoveTask(taskId);\n\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `TaskHolder ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MainInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u044F\\u043C\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(TaskController, {\n        addTaskParentHandler: AddTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(TaskWithLoading, { ...task,\n          removeTaskParentHandler: RemoveTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 41\n        }, this)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 42\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n}, \"+C1P7ukOg/azcV4AZ819oyezFOE=\")), \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n_c3 = TaskHolder;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TaskWithLoading\");\n$RefreshReg$(_c2, \"TaskHolder$observer\");\n$RefreshReg$(_c3, \"TaskHolder\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/Components/TaskHolder/TaskHolder.jsx"],"names":["useState","useContext","useCallback","TaskController","Task","addLodaing","ThemeContext","Selector","TaskFilterOptions","TaskFilter","observer","TaskWithLoading","TaskHolder","tasksStore","AddTask","task","todos","RemoveTask","taskId","theme","map","id"],"mappings":";;;AAAA,SAAQA,QAAR,EAAiBC,UAAjB,EAA6BC,WAA7B,QAA+C,OAA/C;AACA,OAAO,kBAAP;AACA,SAAQC,cAAR,QAA6B,iCAA7B;AACA,SAAQC,IAAR,QAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,8BAA9C;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,eAAe,GAAGN,UAAU,CAACD,IAAD,CAAlC;KAAMO,e;AACN,OAAO,MAAMC,UAAU,MAAGF,QAAQ,UAAC,QAAgB;AAAA;;AAAA,MAAf;AAACG,IAAAA;AAAD,GAAe;;AAC/C,QAAMC,OAAO,GAAGC,IAAD,IAAQF,UAAU,CAACC,OAAX,CAAmBC,IAAnB,CAAvB;;AACA,QAAMC,KAAK,GAAGH,UAAU,CAACG,KAAzB;;AACA,QAAMC,UAAU,GAAGC,MAAD,IAAWL,UAAU,CAACI,UAAX,CAAsBC,MAAtB,CAA7B;;AACA,QAAMC,KAAK,GAAGlB,UAAU,CAACK,YAAD,CAAxB;AACA,sBAAQ;AAAK,IAAA,SAAS,EAAG,cAAaa,KAAM,EAApC;AAAA,4BACQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEQ,QAAC,cAAD;AAAgB,QAAA,oBAAoB,EAAEL;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,eASQ;AAAA,gBACKE,KAAK,CAACI,GAAN,CAAUL,IAAI,iBAAE;AAAA,+BACD,QAAC,eAAD,OAAqBA,IAArB;AACA,UAAA,uBAAuB,EAAIE;AAD3B;AAAA;AAAA;AAAA;AAAA;AADC,SAAWF,IAAI,CAACM,EAAhB;AAAA;AAAA;AAAA;AAAA,cAAhB;AADL;AAAA;AAAA;AAAA;AAAA,YATR;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAiBH,CAtBiC,kCAAX,iCAAhB;MAAMT,U","sourcesContent":["import {useState,useContext, useCallback} from 'react'\r\nimport './TaskHolder.css'\r\nimport {TaskController} from './TaskController/TaskController';\r\nimport {Task} from '../Task/Task';\r\nimport { addLodaing } from '../../HOCs/LoaderHOC';\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\nimport { Selector } from '../Selector/Selector';\r\nimport { TaskFilterOptions, TaskFilter } from '../../Constants/Constants.js';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst TaskWithLoading = addLodaing(Task);\r\nexport const TaskHolder = observer(({tasksStore})=>{\r\n    const AddTask =(task)=>tasksStore.AddTask(task);\r\n    const todos = tasksStore.todos;\r\n    const RemoveTask =(taskId) =>tasksStore.RemoveTask(taskId);\r\n    const theme = useContext(ThemeContext);\r\n    return (<div className={`TaskHolder ${theme}`}>\r\n                    <div className='MainInfo'>\r\n                        <h2>Управление заданиями</h2>\r\n                            <TaskController addTaskParentHandler={AddTask}/>\r\n                            {/* <Selector title='Показать' \r\n                                            options={TaskFilterOptions}\r\n                                            changeValueParentHandler = {changeFilterHandler}\r\n                                            parentValue ={taskFilterName} /> */}\r\n                    </div>\r\n                    <ul>\r\n                        {todos.map(task=><li key = {task.id}>\r\n                                        <TaskWithLoading {...task} \r\n                                        removeTaskParentHandler = {RemoveTask}/> \r\n                                    </li>)}\r\n                    </ul>\r\n                </div>\r\n    );\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}