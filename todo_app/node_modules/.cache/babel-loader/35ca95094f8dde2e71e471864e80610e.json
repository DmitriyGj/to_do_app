{"ast":null,"code":"import { TaskFilter } from '../Constants/Constants';\nimport { makeObservable, observable, computed } from 'mobx';\nconst actions = {\n  AddTask: 'AddTask',\n  RemoveTask: 'RemoveTask',\n  ToggleStatusTask: 'ToggleStatusTask'\n};\n\nclass TaskStore {\n  GetTasks() {\n    return this.tasks.filter(this.taskFilter.func);\n  }\n\n  AddTask(task) {\n    this.tasks.push(task);\n  }\n\n  RemoveTask(taskId) {\n    this.tasks = this.tasks.filter(task => task.id !== taskId);\n  }\n\n  ToogleStatusTask(taskId) {\n    this.tasks = this.tasks.map(initTask => initTask.id === taskId ? { ...initTask,\n      done: !initTask.done\n    } : initTask);\n  }\n\n  changeFilter(filterName) {\n    this.taskFilter = TaskFilter.filterName;\n  }\n\n  constructor() {\n    this.tasks = [];\n    this.taskFilter = TaskFilter.All;\n    makeObservable(this, {\n      tasks: observable\n    });\n  }\n\n}\n\nexport default new TaskStore();","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/mobx/tasksStore.js"],"names":["TaskFilter","makeObservable","observable","computed","actions","AddTask","RemoveTask","ToggleStatusTask","TaskStore","GetTasks","tasks","filter","taskFilter","func","task","push","taskId","id","ToogleStatusTask","map","initTask","done","changeFilter","filterName","constructor","All"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,cAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,MAApD;AAEA,MAAMC,OAAO,GAAG;AAACC,EAAAA,OAAO,EAAC,SAAT;AAAoBC,EAAAA,UAAU,EAAC,YAA/B;AAA6CC,EAAAA,gBAAgB,EAAC;AAA9D,CAAhB;;AAEA,MAAMC,SAAN,CAAe;AAMXC,EAAAA,QAAQ,GAAE;AACN,WAAO,KAAKC,KAAL,CAAWC,MAAX,CAAkB,KAAKC,UAAL,CAAgBC,IAAlC,CAAP;AACH;;AAEDR,EAAAA,OAAO,CAACS,IAAD,EAAM;AACT,SAAKJ,KAAL,CAAWK,IAAX,CAAgBD,IAAhB;AACH;;AAEDR,EAAAA,UAAU,CAACU,MAAD,EAAQ;AACd,SAAKN,KAAL,GAAa,KAAKA,KAAL,CAAWC,MAAX,CAAkBG,IAAI,IAAEA,IAAI,CAACG,EAAL,KAAYD,MAApC,CAAb;AACH;;AAEDE,EAAAA,gBAAgB,CAACF,MAAD,EAAQ;AACpB,SAAKN,KAAL,GAAY,KAAKA,KAAL,CAAWS,GAAX,CAAeC,QAAQ,IAAIA,QAAQ,CAACH,EAAT,KAAgBD,MAAhB,GAAyB,EAAC,GAAGI,QAAJ;AAAaC,MAAAA,IAAI,EAAC,CAACD,QAAQ,CAACC;AAA5B,KAAzB,GAA2DD,QAAtF,CAAZ;AACH;;AAEDE,EAAAA,YAAY,CAACC,UAAD,EAAY;AACpB,SAAKX,UAAL,GAAkBZ,UAAU,CAACuB,UAA7B;AACH;;AAEDC,EAAAA,WAAW,GAAE;AAAA,SAzBbd,KAyBa,GAzBL,EAyBK;AAAA,SAxBbE,UAwBa,GAxBAZ,UAAU,CAACyB,GAwBX;AACTxB,IAAAA,cAAc,CAAC,IAAD,EAAM;AAChBS,MAAAA,KAAK,EAAER;AADS,KAAN,CAAd;AAGH;;AA9BU;;AAiCf,eAAgB,IAAIM,SAAJ,EAAhB","sourcesContent":["import { TaskFilter } from '../Constants/Constants';\r\nimport { makeObservable,observable, computed } from 'mobx';\r\n\r\nconst actions = {AddTask:'AddTask', RemoveTask:'RemoveTask', ToggleStatusTask:'ToggleStatusTask'}\r\n\r\nclass TaskStore{\r\n    tasks = []\r\n    taskFilter = TaskFilter.All\r\n\r\n  \r\n\r\n    GetTasks(){\r\n        return this.tasks.filter(this.taskFilter.func);\r\n    }\r\n\r\n    AddTask(task){\r\n        this.tasks.push(task);\r\n    }\r\n\r\n    RemoveTask(taskId){\r\n        this.tasks = this.tasks.filter(task=>task.id !== taskId) \r\n    }\r\n\r\n    ToogleStatusTask(taskId){\r\n        this.tasks= this.tasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n    }\r\n\r\n    changeFilter(filterName){\r\n        this.taskFilter = TaskFilter.filterName\r\n    }\r\n\r\n    constructor(){\r\n        makeObservable(this,{\r\n            tasks: observable,\r\n        });\r\n    }\r\n}\r\n\r\nexport default  new TaskStore();"]},"metadata":{},"sourceType":"module"}