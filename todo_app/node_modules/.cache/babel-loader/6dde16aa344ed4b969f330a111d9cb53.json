{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { TaskHolder } from './Components/TaskHolder/TaskHolder';\nimport { ThemeContext, theme } from './contexts/ThemeContext';\nimport { useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const theme = useContext(ThemeContext); // const toggleThemeHandler = ()=>{\n  // this.setState(prevState=>{return {\n  //   theme:prevState.theme === theme.usual ? theme.dark: theme.usual}\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${theme}ThemeBtn ThemeBtn`,\n      onClick: this.toggleThemeHandler,\n      children: this.state.theme === theme.usual ? 'Темная тема' : 'Светлая тема'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TaskHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/App.js"],"names":["TaskHolder","ThemeContext","theme","useState","useContext","App","props","toggleThemeHandler","state","usual"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,UAAR,QAAyB,oCAAzB;AACA,SAAQC,YAAR,EAAqBC,KAArB,QAAiC,yBAAjC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAChB,QAAMJ,KAAK,GAAGE,UAAU,CAACH,YAAD,CAAxB,CADgB,CAEhB;AACA;AACA;AACA;;AAED,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAG,GAAEC,KAAM,mBAA5B;AACE,MAAA,OAAO,EAAE,KAAKK,kBADhB;AAAA,gBAEK,KAAKC,KAAL,CAAWN,KAAX,KAAqBA,KAAK,CAACO,KAA3B,GAAmC,aAAnC,GAAkD;AAFvD;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAOF;;GAdQJ,G;;KAAAA,G;AAiBT,eAAeA,GAAf","sourcesContent":["import './App.css';\r\nimport {TaskHolder} from './Components/TaskHolder/TaskHolder'\r\nimport {ThemeContext,theme} from './contexts/ThemeContext'\r\nimport { useState, useContext } from 'react';\r\n\r\nfunction App(props) {\r\n    const theme = useContext(ThemeContext);\r\n    // const toggleThemeHandler = ()=>{\r\n    // this.setState(prevState=>{return {\r\n    //   theme:prevState.theme === theme.usual ? theme.dark: theme.usual}\r\n    // });\r\n\r\n   return ( \r\n      <div className=\"App\">\r\n          <button className={`${theme}ThemeBtn ThemeBtn`} \r\n            onClick={this.toggleThemeHandler}>\r\n              {this.state.theme === theme.usual ? 'Темная тема': 'Светлая тема'}</button>\r\n          <TaskHolder />\r\n      </div>)\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}