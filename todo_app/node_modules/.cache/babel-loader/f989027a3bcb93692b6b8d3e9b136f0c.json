{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repositories\\\\CRTReact\\\\to_do_application\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { TaskHolder } from './Components/TaskHolder/TaskHolder';\nimport { theme, ThemeContext } from './contexts/ThemeContext';\nimport { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n\n  const [appTheme, setAppTheme] = useState(theme.usual);\n  const toggleThemeHandler = useCallback(() => {\n    setAppTheme(appTheme === theme.usual ? theme.dark : theme.usual);\n  }, [appTheme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: appTheme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${appTheme}ThemeBtn ThemeBtn`,\n        onClick: toggleThemeHandler,\n        children: appTheme === theme.usual ? 'Темная тема' : 'Светлая тема'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskHolder, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N+Lg9o9HCucpH8OEEcn3Tcky+yo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/App.js"],"names":["TaskHolder","theme","ThemeContext","useState","useCallback","App","props","appTheme","setAppTheme","usual","toggleThemeHandler","dark"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,UAAR,QAAyB,oCAAzB;AACA,SAAQC,KAAR,EAAcC,YAAd,QAAiC,yBAAjC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAyBL,QAAQ,CAACF,KAAK,CAACQ,KAAP,CAAvC;AAEA,QAAMC,kBAAkB,GAAGN,WAAW,CAAC,MAAI;AACzCI,IAAAA,WAAW,CAACD,QAAQ,KAAKN,KAAK,CAACQ,KAAnB,GAA2BR,KAAK,CAACU,IAAjC,GAAuCV,KAAK,CAACQ,KAA9C,CAAX;AAAiE,GAD7B,EAEpC,CAACF,QAAD,CAFoC,CAAtC;AAID,sBACC,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAIA,QAAhC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAG,GAAEA,QAAS,mBAA/B;AACE,QAAA,OAAO,EAAEG,kBADX;AAAA,kBAEKH,QAAQ,KAAKN,KAAK,CAACQ,KAAnB,GAA2B,aAA3B,GAA0C;AAF/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AASF;;GAhBuBJ,G;;KAAAA,G","sourcesContent":["import './App.css';\r\nimport {TaskHolder} from './Components/TaskHolder/TaskHolder'\r\nimport {theme,ThemeContext} from './contexts/ThemeContext'\r\nimport { useState, useCallback } from 'react';\r\n\r\nexport default function App(props) {\r\n    const [appTheme,setAppTheme] = useState(theme.usual);\r\n    \r\n    const toggleThemeHandler = useCallback(()=>{\r\n      setAppTheme(appTheme === theme.usual ? theme.dark: theme.usual);},\r\n      [appTheme]);\r\n\r\n   return (\r\n    <ThemeContext.Provider value = {appTheme}> \r\n      <div className=\"App\">\r\n          <button className={`${appTheme}ThemeBtn ThemeBtn`} \r\n            onClick={toggleThemeHandler}>\r\n              {appTheme === theme.usual ? 'Темная тема': 'Светлая тема'}</button>\r\n          <TaskHolder />\r\n      </div>\r\n    </ThemeContext.Provider>)\r\n}"]},"metadata":{},"sourceType":"module"}