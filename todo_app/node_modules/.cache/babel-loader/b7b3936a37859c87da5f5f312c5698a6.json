{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst tasks = {\n  initedTasks: []\n};\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: tasks,\n  reducers: {\n    addTask: (state, action) => {\n      if (state.initedTasks.some(initTask => initTask.title === action.payload.title)) {\n        alert('Такое задание уже существует');\n      } else {\n        state.initedTasks.push(action.payload);\n      }\n    },\n    removeTask: (state, action) => {\n      state.initedTasks = state.initedTasks.filter(initTask => initTask.id !== action.pa.id);\n    },\n    changeDoneState: (state, action) => {\n      const taskId = action.payload;\n      state.initedTasks = state.initedTasks.map(initTask => initTask.id === taskId ? { ...initTask,\n        done: !initTask.done\n      } : initTask);\n    }\n  }\n});\nexport const {\n  addTask,\n  removeTask,\n  changeDoneState\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"sources":["D:/Repositories/CRTReact/to_do_application/src/redux/tasker.js"],"names":["createSlice","tasks","initedTasks","tasksSlice","name","initialState","reducers","addTask","state","action","some","initTask","title","payload","alert","push","removeTask","filter","id","pa","changeDoneState","taskId","map","done","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,KAAK,GAAG;AAACC,EAAAA,WAAW,EAAC;AAAb,CAAd;AAEA,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;AAClCI,EAAAA,IAAI,EAAC,OAD6B;AAElCC,EAAAA,YAAY,EAAEJ,KAFoB;AAGlCK,EAAAA,QAAQ,EAAC;AACLC,IAAAA,OAAO,EAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AACpB,UAAGD,KAAK,CAACN,WAAN,CAAkBQ,IAAlB,CAAuBC,QAAQ,IAAGA,QAAQ,CAACC,KAAT,KAAmBH,MAAM,CAACI,OAAP,CAAeD,KAApE,CAAH,EAA8E;AAC1EE,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACH,OAFD,MAGI;AACAN,QAAAA,KAAK,CAACN,WAAN,CAAkBa,IAAlB,CAAuBN,MAAM,CAACI,OAA9B;AACH;AACJ,KARI;AASLG,IAAAA,UAAU,EAAC,CAACR,KAAD,EAAOC,MAAP,KAAgB;AACvBD,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACN,WAAN,CAAkBe,MAAlB,CAAyBN,QAAQ,IAAGA,QAAQ,CAACO,EAAT,KAAgBT,MAAM,CAACU,EAAP,CAAUD,EAA9D,CAApB;AACH,KAXI;AAYLE,IAAAA,eAAe,EAAC,CAACZ,KAAD,EAAOC,MAAP,KAAgB;AAC5B,YAAMY,MAAM,GAAGZ,MAAM,CAACI,OAAtB;AACAL,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACN,WAAN,CAAkBoB,GAAlB,CAAsBX,QAAQ,IAAIA,QAAQ,CAACO,EAAT,KAAgBG,MAAhB,GAAyB,EAAC,GAAGV,QAAJ;AAAaY,QAAAA,IAAI,EAAC,CAACZ,QAAQ,CAACY;AAA5B,OAAzB,GAA2DZ,QAA7F,CAApB;AACH;AAfI;AAHyB,CAAD,CAA9B;AAsBP,OAAO,MAAM;AAACJ,EAAAA,OAAD;AAAUS,EAAAA,UAAV;AAAsBI,EAAAA;AAAtB,IAAyCjB,UAAU,CAACqB,OAA1D;AACP,eAAerB,UAAU,CAACsB,OAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst tasks = {initedTasks:[]};\r\n\r\nexport const tasksSlice = createSlice({\r\n    name:'tasks',\r\n    initialState: tasks,\r\n    reducers:{\r\n        addTask:(state,action)=>{\r\n            if(state.initedTasks.some(initTask=> initTask.title === action.payload.title)){\r\n                alert('Такое задание уже существует');\r\n            }\r\n            else{\r\n                state.initedTasks.push(action.payload);\r\n            }\r\n        },\r\n        removeTask:(state,action)=>{\r\n            state.initedTasks = state.initedTasks.filter(initTask=> initTask.id !== action.pa.id);\r\n        },\r\n        changeDoneState:(state,action)=>{\r\n            const taskId = action.payload;\r\n            state.initedTasks = state.initedTasks.map(initTask => initTask.id === taskId ? {...initTask,done:!initTask.done}:initTask );\r\n        }\r\n    }\r\n});\r\n\r\nexport const {addTask, removeTask, changeDoneState} = tasksSlice.actions;\r\nexport default tasksSlice.reducer;"]},"metadata":{},"sourceType":"module"}